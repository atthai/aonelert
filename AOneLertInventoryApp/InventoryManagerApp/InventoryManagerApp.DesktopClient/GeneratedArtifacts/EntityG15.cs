

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class StockOnHand : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the StockOnHand entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockOnHand()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockOnHand(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.StockOnHand> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.StockOnHand.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHand_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHand_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.StockOnHand.DetailsClass.GetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.StockOnHand.DetailsClass.SetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LotNo
        {
            get
            {
                return global::LightSwitchApplication.StockOnHand.DetailsClass.GetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.LotNo);
            }
            set
            {
                global::LightSwitchApplication.StockOnHand.DetailsClass.SetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.LotNo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LotNo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LotNo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LotNo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double QuantityOnHand
        {
            get
            {
                return global::LightSwitchApplication.StockOnHand.DetailsClass.GetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.QuantityOnHand);
            }
            set
            {
                global::LightSwitchApplication.StockOnHand.DetailsClass.SetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.QuantityOnHand, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuantityOnHand_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuantityOnHand_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuantityOnHand_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal SellingPrice
        {
            get
            {
                return global::LightSwitchApplication.StockOnHand.DetailsClass.GetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.SellingPrice);
            }
            set
            {
                global::LightSwitchApplication.StockOnHand.DetailsClass.SetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.SellingPrice, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellingPrice_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellingPrice_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SellingPrice_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal CostPrice
        {
            get
            {
                return global::LightSwitchApplication.StockOnHand.DetailsClass.GetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.CostPrice);
            }
            set
            {
                global::LightSwitchApplication.StockOnHand.DetailsClass.SetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.CostPrice, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CostPrice_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CostPrice_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CostPrice_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsAvailableForSale
        {
            get
            {
                return global::LightSwitchApplication.StockOnHand.DetailsClass.GetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.IsAvailableForSale);
            }
            set
            {
                global::LightSwitchApplication.StockOnHand.DetailsClass.SetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.IsAvailableForSale, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsAvailableForSale_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsAvailableForSale_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsAvailableForSale_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.StockOnHand.DetailsClass.GetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.StockOnHand.DetailsClass.GetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.StockOnHand.DetailsClass.GetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.StockOnHand.DetailsClass.GetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.StockOnHand.DetailsClass.GetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.StockOnHand.DetailsClass.SetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Location Location
        {
            get
            {
                return global::LightSwitchApplication.StockOnHand.DetailsClass.GetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Location);
            }
            set
            {
                global::LightSwitchApplication.StockOnHand.DetailsClass.SetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Location, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Product Product
        {
            get
            {
                return global::LightSwitchApplication.StockOnHand.DetailsClass.GetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Product);
            }
            set
            {
                global::LightSwitchApplication.StockOnHand.DetailsClass.SetValue(this, global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Product, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Product_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Product_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Product_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.StockOnHand,
                global::LightSwitchApplication.StockOnHand.DetailsClass,
                global::LightSwitchApplication.StockOnHand.DetailsClass.IImplementation,
                global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass>.Entry
                __StockOnHandEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass>.Entry(
                    global::LightSwitchApplication.StockOnHand.DetailsClass.__StockOnHand_CreateNew,
                    global::LightSwitchApplication.StockOnHand.DetailsClass.__StockOnHand_Created,
                    global::LightSwitchApplication.StockOnHand.DetailsClass.__StockOnHand_AllowSaveWithErrors);
            private static global::LightSwitchApplication.StockOnHand __StockOnHand_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.StockOnHand> es)
            {
                return new global::LightSwitchApplication.StockOnHand(es);
            }
            private static void __StockOnHand_Created(global::LightSwitchApplication.StockOnHand e)
            {
                e.StockOnHand_Created();
            }
            private static bool __StockOnHand_AllowSaveWithErrors(global::LightSwitchApplication.StockOnHand e)
            {
                bool result = false;
                e.StockOnHand_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string> LotNo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.LotNo) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, double> QuantityOnHand
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.QuantityOnHand) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, decimal> SellingPrice
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.SellingPrice) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, decimal> CostPrice
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.CostPrice) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, bool> IsAvailableForSale
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.IsAvailableForSale) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::LightSwitchApplication.Location> Location
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Location) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::LightSwitchApplication.Location>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::LightSwitchApplication.Product> Product
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Product) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::LightSwitchApplication.Product>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string LotNo { get; set; }
                new double QuantityOnHand { get; set; }
                new decimal SellingPrice { get; set; }
                new decimal CostPrice { get; set; }
                new bool IsAvailableForSale { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Location { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Product { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockOnHand.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, int>.Data> c, global::LightSwitchApplication.StockOnHand.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.StockOnHand e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.StockOnHand e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.StockOnHand e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>.Entry
                    LotNo = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>.Entry(
                        "LotNo",
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._LotNo_Stub,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._LotNo_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._LotNo_Validate,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._LotNo_GetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._LotNo_SetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._LotNo_OnValueChanged);
                private static void _LotNo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockOnHand.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>.Data> c, global::LightSwitchApplication.StockOnHand.DetailsClass d, object sf)
                {
                    c(d, ref d._LotNo, sf);
                }
                private static bool _LotNo_ComputeIsReadOnly(global::LightSwitchApplication.StockOnHand e)
                {
                    bool result = false;
                    e.LotNo_IsReadOnly(ref result);
                    return result;
                }
                private static void _LotNo_Validate(global::LightSwitchApplication.StockOnHand e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LotNo_Validate(r);
                }
                private static string _LotNo_GetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.ImplementationEntity.LotNo;
                }
                private static void _LotNo_SetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LotNo = v;
                }
                private static void _LotNo_OnValueChanged(global::LightSwitchApplication.StockOnHand e)
                {
                    e.LotNo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, double>.Entry
                    QuantityOnHand = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, double>.Entry(
                        "QuantityOnHand",
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._QuantityOnHand_Stub,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._QuantityOnHand_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._QuantityOnHand_Validate,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._QuantityOnHand_GetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._QuantityOnHand_SetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._QuantityOnHand_OnValueChanged);
                private static void _QuantityOnHand_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockOnHand.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, double>.Data> c, global::LightSwitchApplication.StockOnHand.DetailsClass d, object sf)
                {
                    c(d, ref d._QuantityOnHand, sf);
                }
                private static bool _QuantityOnHand_ComputeIsReadOnly(global::LightSwitchApplication.StockOnHand e)
                {
                    bool result = false;
                    e.QuantityOnHand_IsReadOnly(ref result);
                    return result;
                }
                private static void _QuantityOnHand_Validate(global::LightSwitchApplication.StockOnHand e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QuantityOnHand_Validate(r);
                }
                private static double _QuantityOnHand_GetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.ImplementationEntity.QuantityOnHand;
                }
                private static void _QuantityOnHand_SetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d, double v)
                {
                    d.ImplementationEntity.QuantityOnHand = v;
                }
                private static void _QuantityOnHand_OnValueChanged(global::LightSwitchApplication.StockOnHand e)
                {
                    e.QuantityOnHand_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, decimal>.Entry
                    SellingPrice = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, decimal>.Entry(
                        "SellingPrice",
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._SellingPrice_Stub,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._SellingPrice_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._SellingPrice_Validate,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._SellingPrice_GetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._SellingPrice_SetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._SellingPrice_OnValueChanged);
                private static void _SellingPrice_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockOnHand.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.StockOnHand.DetailsClass d, object sf)
                {
                    c(d, ref d._SellingPrice, sf);
                }
                private static bool _SellingPrice_ComputeIsReadOnly(global::LightSwitchApplication.StockOnHand e)
                {
                    bool result = false;
                    e.SellingPrice_IsReadOnly(ref result);
                    return result;
                }
                private static void _SellingPrice_Validate(global::LightSwitchApplication.StockOnHand e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SellingPrice_Validate(r);
                }
                private static decimal _SellingPrice_GetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.ImplementationEntity.SellingPrice;
                }
                private static void _SellingPrice_SetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.SellingPrice = v;
                }
                private static void _SellingPrice_OnValueChanged(global::LightSwitchApplication.StockOnHand e)
                {
                    e.SellingPrice_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, decimal>.Entry
                    CostPrice = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, decimal>.Entry(
                        "CostPrice",
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._CostPrice_Stub,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._CostPrice_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._CostPrice_Validate,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._CostPrice_GetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._CostPrice_SetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._CostPrice_OnValueChanged);
                private static void _CostPrice_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockOnHand.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.StockOnHand.DetailsClass d, object sf)
                {
                    c(d, ref d._CostPrice, sf);
                }
                private static bool _CostPrice_ComputeIsReadOnly(global::LightSwitchApplication.StockOnHand e)
                {
                    bool result = false;
                    e.CostPrice_IsReadOnly(ref result);
                    return result;
                }
                private static void _CostPrice_Validate(global::LightSwitchApplication.StockOnHand e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CostPrice_Validate(r);
                }
                private static decimal _CostPrice_GetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.ImplementationEntity.CostPrice;
                }
                private static void _CostPrice_SetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.CostPrice = v;
                }
                private static void _CostPrice_OnValueChanged(global::LightSwitchApplication.StockOnHand e)
                {
                    e.CostPrice_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, bool>.Entry
                    IsAvailableForSale = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, bool>.Entry(
                        "IsAvailableForSale",
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._IsAvailableForSale_Stub,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._IsAvailableForSale_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._IsAvailableForSale_Validate,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._IsAvailableForSale_GetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._IsAvailableForSale_SetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._IsAvailableForSale_OnValueChanged);
                private static void _IsAvailableForSale_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockOnHand.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, bool>.Data> c, global::LightSwitchApplication.StockOnHand.DetailsClass d, object sf)
                {
                    c(d, ref d._IsAvailableForSale, sf);
                }
                private static bool _IsAvailableForSale_ComputeIsReadOnly(global::LightSwitchApplication.StockOnHand e)
                {
                    bool result = false;
                    e.IsAvailableForSale_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsAvailableForSale_Validate(global::LightSwitchApplication.StockOnHand e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsAvailableForSale_Validate(r);
                }
                private static bool _IsAvailableForSale_GetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.ImplementationEntity.IsAvailableForSale;
                }
                private static void _IsAvailableForSale_SetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsAvailableForSale = v;
                }
                private static void _IsAvailableForSale_OnValueChanged(global::LightSwitchApplication.StockOnHand e)
                {
                    e.IsAvailableForSale_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockOnHand.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>.Data> c, global::LightSwitchApplication.StockOnHand.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.StockOnHand e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.StockOnHand e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.StockOnHand e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockOnHand.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.StockOnHand.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.StockOnHand e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.StockOnHand e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.StockOnHand e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockOnHand.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>.Data> c, global::LightSwitchApplication.StockOnHand.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.StockOnHand e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.StockOnHand e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.StockOnHand e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockOnHand.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.StockOnHand.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.StockOnHand e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.StockOnHand e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.StockOnHand e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockOnHand.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.StockOnHand.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.StockOnHand e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.StockOnHand e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.StockOnHand e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::LightSwitchApplication.Location>.Entry
                    Location = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::LightSwitchApplication.Location>.Entry(
                        "Location",
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Location_Stub,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Location_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Location_Validate,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Location_GetCoreImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Location_GetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Location_SetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Location_Refresh,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Location_OnValueChanged);
                private static void _Location_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockOnHand.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::LightSwitchApplication.Location>.Data> c, global::LightSwitchApplication.StockOnHand.DetailsClass d, object sf)
                {
                    c(d, ref d._Location, sf);
                }
                private static bool _Location_ComputeIsReadOnly(global::LightSwitchApplication.StockOnHand e)
                {
                    bool result = false;
                    e.Location_IsReadOnly(ref result);
                    return result;
                }
                private static void _Location_Validate(global::LightSwitchApplication.StockOnHand e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Location_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Location_GetCoreImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.ImplementationEntity.Location;
                }
                private static global::LightSwitchApplication.Location _Location_GetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Location, global::LightSwitchApplication.Location.DetailsClass>(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Location, ref d._Location);
                }
                private static void _Location_SetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d, global::LightSwitchApplication.Location v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Location, ref d._Location, (i, ev) => i.Location = ev, v);
                }
                private static void _Location_Refresh(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Location, ref d._Location);
                }
                private static void _Location_OnValueChanged(global::LightSwitchApplication.StockOnHand e)
                {
                    e.Location_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::LightSwitchApplication.Product>.Entry
                    Product = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::LightSwitchApplication.Product>.Entry(
                        "Product",
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Product_Stub,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Product_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Product_Validate,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Product_GetCoreImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Product_GetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Product_SetImplementationValue,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Product_Refresh,
                        global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties._Product_OnValueChanged);
                private static void _Product_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockOnHand.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::LightSwitchApplication.Product>.Data> c, global::LightSwitchApplication.StockOnHand.DetailsClass d, object sf)
                {
                    c(d, ref d._Product, sf);
                }
                private static bool _Product_ComputeIsReadOnly(global::LightSwitchApplication.StockOnHand e)
                {
                    bool result = false;
                    e.Product_IsReadOnly(ref result);
                    return result;
                }
                private static void _Product_Validate(global::LightSwitchApplication.StockOnHand e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Product_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Product_GetCoreImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.ImplementationEntity.Product;
                }
                private static global::LightSwitchApplication.Product _Product_GetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass>(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Product, ref d._Product);
                }
                private static void _Product_SetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass d, global::LightSwitchApplication.Product v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Product, ref d._Product, (i, ev) => i.Product = ev, v);
                }
                private static void _Product_Refresh(global::LightSwitchApplication.StockOnHand.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.StockOnHand.DetailsClass.PropertySetProperties.Product, ref d._Product);
                }
                private static void _Product_OnValueChanged(global::LightSwitchApplication.StockOnHand e)
                {
                    e.Product_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>.Data _LotNo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, double>.Data _QuantityOnHand;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, decimal>.Data _SellingPrice;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, decimal>.Data _CostPrice;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, bool>.Data _IsAvailableForSale;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::LightSwitchApplication.Location>.Data _Location;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.StockOnHand, global::LightSwitchApplication.StockOnHand.DetailsClass, global::LightSwitchApplication.Product>.Data _Product;
            
        }
    
        #endregion
    }
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class StockTransaction : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the StockTransaction entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockTransaction()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public StockTransaction(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.StockTransaction> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.StockTransaction.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransaction_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransaction_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.StockTransaction.DetailsClass.SetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TransactionPeriod
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.TransactionPeriod);
            }
            set
            {
                global::LightSwitchApplication.StockTransaction.DetailsClass.SetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.TransactionPeriod, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionPeriod_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionPeriod_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionPeriod_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.TransactionDate);
            }
            set
            {
                global::LightSwitchApplication.StockTransaction.DetailsClass.SetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.TransactionDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TransactionNo
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.TransactionNo);
            }
            set
            {
                global::LightSwitchApplication.StockTransaction.DetailsClass.SetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.TransactionNo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionNo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionNo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionNo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TransactionType
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.TransactionType);
            }
            set
            {
                global::LightSwitchApplication.StockTransaction.DetailsClass.SetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.TransactionType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactionType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public short ItemSequence
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.ItemSequence);
            }
            set
            {
                global::LightSwitchApplication.StockTransaction.DetailsClass.SetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.ItemSequence, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemSequence_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemSequence_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ItemSequence_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int LocationId
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.LocationId);
            }
            set
            {
                global::LightSwitchApplication.StockTransaction.DetailsClass.SetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.LocationId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ProductId
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.ProductId);
            }
            set
            {
                global::LightSwitchApplication.StockTransaction.DetailsClass.SetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.ProductId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LotNo
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.LotNo);
            }
            set
            {
                global::LightSwitchApplication.StockTransaction.DetailsClass.SetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.LotNo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LotNo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LotNo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LotNo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double Quantity
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.Quantity);
            }
            set
            {
                global::LightSwitchApplication.StockTransaction.DetailsClass.SetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.Quantity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quantity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quantity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Quantity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public decimal CostPrice
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.CostPrice);
            }
            set
            {
                global::LightSwitchApplication.StockTransaction.DetailsClass.SetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.CostPrice, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CostPrice_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CostPrice_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CostPrice_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.StockTransaction.DetailsClass.GetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.StockTransaction.DetailsClass.SetValue(this, global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.StockTransaction,
                global::LightSwitchApplication.StockTransaction.DetailsClass,
                global::LightSwitchApplication.StockTransaction.DetailsClass.IImplementation,
                global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass>.Entry
                __StockTransactionEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass>.Entry(
                    global::LightSwitchApplication.StockTransaction.DetailsClass.__StockTransaction_CreateNew,
                    global::LightSwitchApplication.StockTransaction.DetailsClass.__StockTransaction_Created,
                    global::LightSwitchApplication.StockTransaction.DetailsClass.__StockTransaction_AllowSaveWithErrors);
            private static global::LightSwitchApplication.StockTransaction __StockTransaction_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.StockTransaction> es)
            {
                return new global::LightSwitchApplication.StockTransaction(es);
            }
            private static void __StockTransaction_Created(global::LightSwitchApplication.StockTransaction e)
            {
                e.StockTransaction_Created();
            }
            private static bool __StockTransaction_AllowSaveWithErrors(global::LightSwitchApplication.StockTransaction e)
            {
                bool result = false;
                e.StockTransaction_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string> TransactionPeriod
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.TransactionPeriod) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.DateTime> TransactionDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.TransactionDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string> TransactionNo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.TransactionNo) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string> TransactionType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.TransactionType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, short> ItemSequence
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.ItemSequence) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, short>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int> LocationId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.LocationId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int> ProductId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.ProductId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string> LotNo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.LotNo) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, double> Quantity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.Quantity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, decimal> CostPrice
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.CostPrice) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, decimal>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, byte[]>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string TransactionPeriod { get; set; }
                new global::System.DateTime TransactionDate { get; set; }
                new string TransactionNo { get; set; }
                new string TransactionType { get; set; }
                new short ItemSequence { get; set; }
                new int LocationId { get; set; }
                new int ProductId { get; set; }
                new string LotNo { get; set; }
                new double Quantity { get; set; }
                new decimal CostPrice { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Entry
                    TransactionPeriod = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Entry(
                        "TransactionPeriod",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionPeriod_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionPeriod_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionPeriod_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionPeriod_GetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionPeriod_SetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionPeriod_OnValueChanged);
                private static void _TransactionPeriod_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._TransactionPeriod, sf);
                }
                private static bool _TransactionPeriod_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.TransactionPeriod_IsReadOnly(ref result);
                    return result;
                }
                private static void _TransactionPeriod_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TransactionPeriod_Validate(r);
                }
                private static string _TransactionPeriod_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.TransactionPeriod;
                }
                private static void _TransactionPeriod_SetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TransactionPeriod = v;
                }
                private static void _TransactionPeriod_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.TransactionPeriod_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.DateTime>.Entry
                    TransactionDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.DateTime>.Entry(
                        "TransactionDate",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionDate_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionDate_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionDate_GetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionDate_SetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionDate_OnValueChanged);
                private static void _TransactionDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._TransactionDate, sf);
                }
                private static bool _TransactionDate_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.TransactionDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _TransactionDate_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TransactionDate_Validate(r);
                }
                private static global::System.DateTime _TransactionDate_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.TransactionDate;
                }
                private static void _TransactionDate_SetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.TransactionDate = global::LightSwitchApplication.StockTransaction.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _TransactionDate_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.TransactionDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Entry
                    TransactionNo = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Entry(
                        "TransactionNo",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionNo_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionNo_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionNo_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionNo_GetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionNo_SetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionNo_OnValueChanged);
                private static void _TransactionNo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._TransactionNo, sf);
                }
                private static bool _TransactionNo_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.TransactionNo_IsReadOnly(ref result);
                    return result;
                }
                private static void _TransactionNo_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TransactionNo_Validate(r);
                }
                private static string _TransactionNo_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.TransactionNo;
                }
                private static void _TransactionNo_SetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TransactionNo = v;
                }
                private static void _TransactionNo_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.TransactionNo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Entry
                    TransactionType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Entry(
                        "TransactionType",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionType_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionType_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionType_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionType_GetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionType_SetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._TransactionType_OnValueChanged);
                private static void _TransactionType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._TransactionType, sf);
                }
                private static bool _TransactionType_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.TransactionType_IsReadOnly(ref result);
                    return result;
                }
                private static void _TransactionType_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TransactionType_Validate(r);
                }
                private static string _TransactionType_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.TransactionType;
                }
                private static void _TransactionType_SetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TransactionType = v;
                }
                private static void _TransactionType_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.TransactionType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, short>.Entry
                    ItemSequence = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, short>.Entry(
                        "ItemSequence",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ItemSequence_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ItemSequence_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ItemSequence_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ItemSequence_GetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ItemSequence_SetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ItemSequence_OnValueChanged);
                private static void _ItemSequence_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, short>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._ItemSequence, sf);
                }
                private static bool _ItemSequence_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.ItemSequence_IsReadOnly(ref result);
                    return result;
                }
                private static void _ItemSequence_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ItemSequence_Validate(r);
                }
                private static short _ItemSequence_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.ItemSequence;
                }
                private static void _ItemSequence_SetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d, short v)
                {
                    d.ImplementationEntity.ItemSequence = v;
                }
                private static void _ItemSequence_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.ItemSequence_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>.Entry
                    LocationId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>.Entry(
                        "LocationId",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._LocationId_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._LocationId_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._LocationId_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._LocationId_GetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._LocationId_SetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._LocationId_OnValueChanged);
                private static void _LocationId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._LocationId, sf);
                }
                private static bool _LocationId_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.LocationId_IsReadOnly(ref result);
                    return result;
                }
                private static void _LocationId_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LocationId_Validate(r);
                }
                private static int _LocationId_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.LocationId;
                }
                private static void _LocationId_SetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d, int v)
                {
                    d.ImplementationEntity.LocationId = v;
                }
                private static void _LocationId_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.LocationId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>.Entry
                    ProductId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>.Entry(
                        "ProductId",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ProductId_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ProductId_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ProductId_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ProductId_GetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ProductId_SetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ProductId_OnValueChanged);
                private static void _ProductId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._ProductId, sf);
                }
                private static bool _ProductId_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.ProductId_IsReadOnly(ref result);
                    return result;
                }
                private static void _ProductId_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ProductId_Validate(r);
                }
                private static int _ProductId_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.ProductId;
                }
                private static void _ProductId_SetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d, int v)
                {
                    d.ImplementationEntity.ProductId = v;
                }
                private static void _ProductId_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.ProductId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Entry
                    LotNo = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Entry(
                        "LotNo",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._LotNo_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._LotNo_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._LotNo_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._LotNo_GetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._LotNo_SetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._LotNo_OnValueChanged);
                private static void _LotNo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._LotNo, sf);
                }
                private static bool _LotNo_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.LotNo_IsReadOnly(ref result);
                    return result;
                }
                private static void _LotNo_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LotNo_Validate(r);
                }
                private static string _LotNo_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.LotNo;
                }
                private static void _LotNo_SetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LotNo = v;
                }
                private static void _LotNo_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.LotNo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, double>.Entry
                    Quantity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, double>.Entry(
                        "Quantity",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Quantity_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Quantity_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Quantity_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Quantity_GetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Quantity_SetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Quantity_OnValueChanged);
                private static void _Quantity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, double>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._Quantity, sf);
                }
                private static bool _Quantity_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.Quantity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Quantity_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Quantity_Validate(r);
                }
                private static double _Quantity_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.Quantity;
                }
                private static void _Quantity_SetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d, double v)
                {
                    d.ImplementationEntity.Quantity = v;
                }
                private static void _Quantity_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.Quantity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, decimal>.Entry
                    CostPrice = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, decimal>.Entry(
                        "CostPrice",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._CostPrice_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._CostPrice_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._CostPrice_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._CostPrice_GetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._CostPrice_SetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._CostPrice_OnValueChanged);
                private static void _CostPrice_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, decimal>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._CostPrice, sf);
                }
                private static bool _CostPrice_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.CostPrice_IsReadOnly(ref result);
                    return result;
                }
                private static void _CostPrice_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CostPrice_Validate(r);
                }
                private static decimal _CostPrice_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.CostPrice;
                }
                private static void _CostPrice_SetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d, decimal v)
                {
                    d.ImplementationEntity.CostPrice = v;
                }
                private static void _CostPrice_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.CostPrice_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.StockTransaction.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.StockTransaction.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.StockTransaction.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.StockTransaction e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.StockTransaction.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.StockTransaction e)
                {
                    e.RowVersion_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Data _TransactionPeriod;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.DateTime>.Data _TransactionDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Data _TransactionNo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Data _TransactionType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, short>.Data _ItemSequence;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>.Data _LocationId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, int>.Data _ProductId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Data _LotNo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, double>.Data _Quantity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, decimal>.Data _CostPrice;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.StockTransaction, global::LightSwitchApplication.StockTransaction.DetailsClass, byte[]>.Data _RowVersion;
            
        }
    
        #endregion
    }
    
    #endregion
}
