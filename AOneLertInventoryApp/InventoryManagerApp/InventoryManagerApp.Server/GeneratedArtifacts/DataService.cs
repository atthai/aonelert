//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Banks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Banks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Banks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Banks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Banks_Inserting(global::LightSwitchApplication.Bank entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Banks_Inserted(global::LightSwitchApplication.Bank entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Banks_Updating(global::LightSwitchApplication.Bank entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Banks_Updated(global::LightSwitchApplication.Bank entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Banks_Deleting(global::LightSwitchApplication.Bank entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Banks_Deleted(global::LightSwitchApplication.Bank entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Banks_Validate(global::LightSwitchApplication.Bank entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Banks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Bank, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Inserting(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Inserted(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Updating(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Updated(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Deleting(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Deleted(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Validate(global::LightSwitchApplication.Company entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companies_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerGroups_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerGroups_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerGroups_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerGroups_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerGroups_Inserting(global::LightSwitchApplication.CustomerGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerGroups_Inserted(global::LightSwitchApplication.CustomerGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerGroups_Updating(global::LightSwitchApplication.CustomerGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerGroups_Updated(global::LightSwitchApplication.CustomerGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerGroups_Deleting(global::LightSwitchApplication.CustomerGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerGroups_Deleted(global::LightSwitchApplication.CustomerGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerGroups_Validate(global::LightSwitchApplication.CustomerGroup entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerGroups_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CustomerGroup, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Inserting(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Inserted(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Updating(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Updated(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Deleting(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Deleted(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Validate(global::LightSwitchApplication.Customer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Customers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Customer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updating(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updated(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::LightSwitchApplication.Employee entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Inserting(global::LightSwitchApplication.Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Inserted(global::LightSwitchApplication.Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Updating(global::LightSwitchApplication.Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Updated(global::LightSwitchApplication.Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Deleting(global::LightSwitchApplication.Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Deleted(global::LightSwitchApplication.Location entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Validate(global::LightSwitchApplication.Location entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Locations_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Location, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Machines_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Machines_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Machines_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Machines_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Machines_Inserting(global::LightSwitchApplication.Machine entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Machines_Inserted(global::LightSwitchApplication.Machine entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Machines_Updating(global::LightSwitchApplication.Machine entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Machines_Updated(global::LightSwitchApplication.Machine entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Machines_Deleting(global::LightSwitchApplication.Machine entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Machines_Deleted(global::LightSwitchApplication.Machine entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Machines_Validate(global::LightSwitchApplication.Machine entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Machines_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Machine, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetails_Inserting(global::LightSwitchApplication.OrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetails_Inserted(global::LightSwitchApplication.OrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetails_Updating(global::LightSwitchApplication.OrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetails_Updated(global::LightSwitchApplication.OrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetails_Deleting(global::LightSwitchApplication.OrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetails_Deleted(global::LightSwitchApplication.OrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetails_Validate(global::LightSwitchApplication.OrderDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Inserting(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Inserted(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Updating(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Updated(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Deleting(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Deleted(global::LightSwitchApplication.Order entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Validate(global::LightSwitchApplication.Order entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Order, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Inserting(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Inserted(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Updating(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Updated(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Deleting(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Deleted(global::LightSwitchApplication.Package entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Validate(global::LightSwitchApplication.Package entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Packages_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Package, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentTypes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentTypes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentTypes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentTypes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentTypes_Inserting(global::LightSwitchApplication.PaymentType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentTypes_Inserted(global::LightSwitchApplication.PaymentType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentTypes_Updating(global::LightSwitchApplication.PaymentType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentTypes_Updated(global::LightSwitchApplication.PaymentType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentTypes_Deleting(global::LightSwitchApplication.PaymentType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentTypes_Deleted(global::LightSwitchApplication.PaymentType entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentTypes_Validate(global::LightSwitchApplication.PaymentType entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentTypes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PaymentType, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCategories_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCategories_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCategories_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCategories_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCategories_Inserting(global::LightSwitchApplication.ProductCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCategories_Inserted(global::LightSwitchApplication.ProductCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCategories_Updating(global::LightSwitchApplication.ProductCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCategories_Updated(global::LightSwitchApplication.ProductCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCategories_Deleting(global::LightSwitchApplication.ProductCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCategories_Deleted(global::LightSwitchApplication.ProductCategory entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCategories_Validate(global::LightSwitchApplication.ProductCategory entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCategories_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductCategory, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Inserting(global::LightSwitchApplication.ProductGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Inserted(global::LightSwitchApplication.ProductGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Updating(global::LightSwitchApplication.ProductGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Updated(global::LightSwitchApplication.ProductGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Deleting(global::LightSwitchApplication.ProductGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Deleted(global::LightSwitchApplication.ProductGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Validate(global::LightSwitchApplication.ProductGroup entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroups_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductGroup, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwardDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwardDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwardDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwardDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwardDetails_Inserting(global::LightSwitchApplication.ProductReceiveBalanceForwardDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwardDetails_Inserted(global::LightSwitchApplication.ProductReceiveBalanceForwardDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwardDetails_Updating(global::LightSwitchApplication.ProductReceiveBalanceForwardDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwardDetails_Updated(global::LightSwitchApplication.ProductReceiveBalanceForwardDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwardDetails_Deleting(global::LightSwitchApplication.ProductReceiveBalanceForwardDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwardDetails_Deleted(global::LightSwitchApplication.ProductReceiveBalanceForwardDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwardDetails_Validate(global::LightSwitchApplication.ProductReceiveBalanceForwardDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwardDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductReceiveBalanceForwardDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwards_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwards_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwards_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwards_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwards_Inserting(global::LightSwitchApplication.ProductReceiveBalanceForward entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwards_Inserted(global::LightSwitchApplication.ProductReceiveBalanceForward entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwards_Updating(global::LightSwitchApplication.ProductReceiveBalanceForward entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwards_Updated(global::LightSwitchApplication.ProductReceiveBalanceForward entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwards_Deleting(global::LightSwitchApplication.ProductReceiveBalanceForward entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwards_Deleted(global::LightSwitchApplication.ProductReceiveBalanceForward entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwards_Validate(global::LightSwitchApplication.ProductReceiveBalanceForward entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductReceiveBalanceForwards_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductReceiveBalanceForward, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Inserting(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Inserted(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Updating(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Updated(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Deleting(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Deleted(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Validate(global::LightSwitchApplication.Product entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Product, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSubscribers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSubscribers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSubscribers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSubscribers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSubscribers_Inserting(global::LightSwitchApplication.ProductSubscriber entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSubscribers_Inserted(global::LightSwitchApplication.ProductSubscriber entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSubscribers_Updating(global::LightSwitchApplication.ProductSubscriber entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSubscribers_Updated(global::LightSwitchApplication.ProductSubscriber entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSubscribers_Deleting(global::LightSwitchApplication.ProductSubscriber entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSubscribers_Deleted(global::LightSwitchApplication.ProductSubscriber entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSubscribers_Validate(global::LightSwitchApplication.ProductSubscriber entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSubscribers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductSubscriber, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderDetails_Inserting(global::LightSwitchApplication.PurchaseOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderDetails_Inserted(global::LightSwitchApplication.PurchaseOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderDetails_Updating(global::LightSwitchApplication.PurchaseOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderDetails_Updated(global::LightSwitchApplication.PurchaseOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderDetails_Deleting(global::LightSwitchApplication.PurchaseOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderDetails_Deleted(global::LightSwitchApplication.PurchaseOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderDetails_Validate(global::LightSwitchApplication.PurchaseOrderDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrderDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Inserting(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Inserted(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Updating(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Updated(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Deleting(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Deleted(global::LightSwitchApplication.PurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Validate(global::LightSwitchApplication.PurchaseOrder entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrders_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrder, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrderDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrderDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrderDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrderDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrderDetails_Inserting(global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrderDetails_Inserted(global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrderDetails_Updating(global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrderDetails_Updated(global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrderDetails_Deleting(global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrderDetails_Deleted(global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrderDetails_Validate(global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrderDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrders_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrders_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrders_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrders_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrders_Inserting(global::LightSwitchApplication.ReceiveFromPurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrders_Inserted(global::LightSwitchApplication.ReceiveFromPurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrders_Updating(global::LightSwitchApplication.ReceiveFromPurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrders_Updated(global::LightSwitchApplication.ReceiveFromPurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrders_Deleting(global::LightSwitchApplication.ReceiveFromPurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrders_Deleted(global::LightSwitchApplication.ReceiveFromPurchaseOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrders_Validate(global::LightSwitchApplication.ReceiveFromPurchaseOrder entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReceiveFromPurchaseOrders_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReceiveFromPurchaseOrder, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrderDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrderDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrderDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrderDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrderDetails_Inserting(global::LightSwitchApplication.SaleOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrderDetails_Inserted(global::LightSwitchApplication.SaleOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrderDetails_Updating(global::LightSwitchApplication.SaleOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrderDetails_Updated(global::LightSwitchApplication.SaleOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrderDetails_Deleting(global::LightSwitchApplication.SaleOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrderDetails_Deleted(global::LightSwitchApplication.SaleOrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrderDetails_Validate(global::LightSwitchApplication.SaleOrderDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrderDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SaleOrderDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrders_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrders_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrders_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrders_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrders_Inserting(global::LightSwitchApplication.SaleOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrders_Inserted(global::LightSwitchApplication.SaleOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrders_Updating(global::LightSwitchApplication.SaleOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrders_Updated(global::LightSwitchApplication.SaleOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrders_Deleting(global::LightSwitchApplication.SaleOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrders_Deleted(global::LightSwitchApplication.SaleOrder entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrders_Validate(global::LightSwitchApplication.SaleOrder entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaleOrders_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SaleOrder, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethods_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethods_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethods_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethods_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethods_Inserting(global::LightSwitchApplication.ShippingMethod entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethods_Inserted(global::LightSwitchApplication.ShippingMethod entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethods_Updating(global::LightSwitchApplication.ShippingMethod entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethods_Updated(global::LightSwitchApplication.ShippingMethod entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethods_Deleting(global::LightSwitchApplication.ShippingMethod entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethods_Deleted(global::LightSwitchApplication.ShippingMethod entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethods_Validate(global::LightSwitchApplication.ShippingMethod entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShippingMethods_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ShippingMethod, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjustDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjustDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjustDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjustDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjustDetails_Inserting(global::LightSwitchApplication.StockAdjustDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjustDetails_Inserted(global::LightSwitchApplication.StockAdjustDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjustDetails_Updating(global::LightSwitchApplication.StockAdjustDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjustDetails_Updated(global::LightSwitchApplication.StockAdjustDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjustDetails_Deleting(global::LightSwitchApplication.StockAdjustDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjustDetails_Deleted(global::LightSwitchApplication.StockAdjustDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjustDetails_Validate(global::LightSwitchApplication.StockAdjustDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjustDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockAdjustDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjusts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjusts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjusts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjusts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjusts_Inserting(global::LightSwitchApplication.StockAdjust entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjusts_Inserted(global::LightSwitchApplication.StockAdjust entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjusts_Updating(global::LightSwitchApplication.StockAdjust entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjusts_Updated(global::LightSwitchApplication.StockAdjust entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjusts_Deleting(global::LightSwitchApplication.StockAdjust entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjusts_Deleted(global::LightSwitchApplication.StockAdjust entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjusts_Validate(global::LightSwitchApplication.StockAdjust entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockAdjusts_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockAdjust, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockCheckDetails_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockCheckDetails_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockCheckDetails_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockCheckDetails_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockCheckDetails_Inserting(global::LightSwitchApplication.StockCheckDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockCheckDetails_Inserted(global::LightSwitchApplication.StockCheckDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockCheckDetails_Updating(global::LightSwitchApplication.StockCheckDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockCheckDetails_Updated(global::LightSwitchApplication.StockCheckDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockCheckDetails_Deleting(global::LightSwitchApplication.StockCheckDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockCheckDetails_Deleted(global::LightSwitchApplication.StockCheckDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockCheckDetails_Validate(global::LightSwitchApplication.StockCheckDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockCheckDetails_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockCheckDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockChecks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockChecks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockChecks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockChecks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockChecks_Inserting(global::LightSwitchApplication.StockCheck entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockChecks_Inserted(global::LightSwitchApplication.StockCheck entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockChecks_Updating(global::LightSwitchApplication.StockCheck entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockChecks_Updated(global::LightSwitchApplication.StockCheck entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockChecks_Deleting(global::LightSwitchApplication.StockCheck entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockChecks_Deleted(global::LightSwitchApplication.StockCheck entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockChecks_Validate(global::LightSwitchApplication.StockCheck entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockChecks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockCheck, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHands_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHands_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHands_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHands_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHands_Inserting(global::LightSwitchApplication.StockOnHand entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHands_Inserted(global::LightSwitchApplication.StockOnHand entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHands_Updating(global::LightSwitchApplication.StockOnHand entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHands_Updated(global::LightSwitchApplication.StockOnHand entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHands_Deleting(global::LightSwitchApplication.StockOnHand entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHands_Deleted(global::LightSwitchApplication.StockOnHand entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHands_Validate(global::LightSwitchApplication.StockOnHand entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHands_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockOnHand, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransactions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransactions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransactions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransactions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransactions_Inserting(global::LightSwitchApplication.StockTransaction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransactions_Inserted(global::LightSwitchApplication.StockTransaction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransactions_Updating(global::LightSwitchApplication.StockTransaction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransactions_Updated(global::LightSwitchApplication.StockTransaction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransactions_Deleting(global::LightSwitchApplication.StockTransaction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransactions_Deleted(global::LightSwitchApplication.StockTransaction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransactions_Validate(global::LightSwitchApplication.StockTransaction entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransactions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockTransaction, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransfers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransfers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransfers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransfers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransfers_Inserting(global::LightSwitchApplication.StockTransfer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransfers_Inserted(global::LightSwitchApplication.StockTransfer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransfers_Updating(global::LightSwitchApplication.StockTransfer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransfers_Updated(global::LightSwitchApplication.StockTransfer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransfers_Deleting(global::LightSwitchApplication.StockTransfer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransfers_Deleted(global::LightSwitchApplication.StockTransfer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransfers_Validate(global::LightSwitchApplication.StockTransfer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockTransfers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockTransfer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierGroups_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierGroups_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierGroups_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierGroups_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierGroups_Inserting(global::LightSwitchApplication.SupplierGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierGroups_Inserted(global::LightSwitchApplication.SupplierGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierGroups_Updating(global::LightSwitchApplication.SupplierGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierGroups_Updated(global::LightSwitchApplication.SupplierGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierGroups_Deleting(global::LightSwitchApplication.SupplierGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierGroups_Deleted(global::LightSwitchApplication.SupplierGroup entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierGroups_Validate(global::LightSwitchApplication.SupplierGroup entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierGroups_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SupplierGroup, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Inserting(global::LightSwitchApplication.Supplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Inserted(global::LightSwitchApplication.Supplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Updating(global::LightSwitchApplication.Supplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Updated(global::LightSwitchApplication.Supplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Deleting(global::LightSwitchApplication.Supplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Deleted(global::LightSwitchApplication.Supplier entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Validate(global::LightSwitchApplication.Supplier entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Suppliers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Supplier, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Inserting(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Inserted(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Updating(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Updated(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Deleting(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Deleted(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Validate(global::LightSwitchApplication.Table1Item entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Table1Item, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransportRoutes_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransportRoutes_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransportRoutes_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransportRoutes_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransportRoutes_Inserting(global::LightSwitchApplication.TransportRoute entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransportRoutes_Inserted(global::LightSwitchApplication.TransportRoute entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransportRoutes_Updating(global::LightSwitchApplication.TransportRoute entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransportRoutes_Updated(global::LightSwitchApplication.TransportRoute entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransportRoutes_Deleting(global::LightSwitchApplication.TransportRoute entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransportRoutes_Deleted(global::LightSwitchApplication.TransportRoute entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransportRoutes_Validate(global::LightSwitchApplication.TransportRoute entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransportRoutes_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TransportRoute, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasures_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasures_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasures_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasures_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasures_Inserting(global::LightSwitchApplication.UnitOfMeasure entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasures_Inserted(global::LightSwitchApplication.UnitOfMeasure entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasures_Updating(global::LightSwitchApplication.UnitOfMeasure entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasures_Updated(global::LightSwitchApplication.UnitOfMeasure entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasures_Deleting(global::LightSwitchApplication.UnitOfMeasure entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasures_Deleted(global::LightSwitchApplication.UnitOfMeasure entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasures_Validate(global::LightSwitchApplication.UnitOfMeasure entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasures_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UnitOfMeasure, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Workers_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Workers_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Workers_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Workers_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Workers_Inserting(global::LightSwitchApplication.Worker entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Workers_Inserted(global::LightSwitchApplication.Worker entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Workers_Updating(global::LightSwitchApplication.Worker entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Workers_Updated(global::LightSwitchApplication.Worker entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Workers_Deleting(global::LightSwitchApplication.Worker entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Workers_Deleted(global::LightSwitchApplication.Worker entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Workers_Validate(global::LightSwitchApplication.Worker entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Workers_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Worker, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BankActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void BankActiveQuery_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BankActiveQuery_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Bank> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void BankActiveQuery_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Bank> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void BankActiveQuery_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerGroupActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CustomerGroupActiveQuery_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerGroupActiveQuery_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.CustomerGroup> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CustomerGroupActiveQuery_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CustomerGroup> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CustomerGroupActiveQuery_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomersActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CustomersActiveQuery_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomersActiveQuery_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Customer> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CustomersActiveQuery_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Customer> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void CustomersActiveQuery_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void LocationActiveQuery_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationActiveQuery_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Location> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void LocationActiveQuery_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Location> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void LocationActiveQuery_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MachineActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MachineActiveQuery_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MachineActiveQuery_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Machine> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MachineActiveQuery_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Machine> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MachineActiveQuery_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PackageActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PackageActiveQuery_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PackageActiveQuery_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Package> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PackageActiveQuery_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Package> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PackageActiveQuery_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentTypeActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PaymentTypeActiveQuery_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PaymentTypeActiveQuery_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.PaymentType> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PaymentTypeActiveQuery_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PaymentType> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PaymentTypeActiveQuery_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCategoriesActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductCategoriesActiveQuery_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductCategoriesActiveQuery_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProductCategory> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductCategoriesActiveQuery_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductCategory> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductCategoriesActiveQuery_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroupsActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductGroupsActiveQuery_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductGroupsActiveQuery_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProductGroup> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductGroupsActiveQuery_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductGroup> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductGroupsActiveQuery_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QueryLatestProductReceiveBalanceForwardDocumentNo_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void QueryLatestProductReceiveBalanceForwardDocumentNo_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QueryLatestProductReceiveBalanceForwardDocumentNo_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ProductReceiveBalanceForward> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void QueryLatestProductReceiveBalanceForwardDocumentNo_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductReceiveBalanceForward> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void QueryLatestProductReceiveBalanceForwardDocumentNo_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductsActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductsActiveQuery_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductsActiveQuery_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductsActiveQuery_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void ProductsActiveQuery_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderDetailByPOId_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchaseOrderDetailByPOId_Executing(global::System.Nullable<int> POId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderDetailByPOId_PreprocessQuery(global::System.Nullable<int> POId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrderDetail> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchaseOrderDetailByPOId_Executed(global::System.Nullable<int> POId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrderDetail> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchaseOrderDetailByPOId_ExecuteFailed(global::System.Nullable<int> POId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderNotClose_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchaseOrderNotClose_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PurchaseOrderNotClose_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrder> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchaseOrderNotClose_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrder> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void PurchaseOrderNotClose_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QueryMaxPONumber_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void QueryMaxPONumber_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QueryMaxPONumber_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrder> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void QueryMaxPONumber_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrder> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void QueryMaxPONumber_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHandForSale_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void StockOnHandForSale_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StockOnHandForSale_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.StockOnHand> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void StockOnHandForSale_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StockOnHand> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void StockOnHandForSale_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierGroupsActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SupplierGroupsActiveQuery_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierGroupsActiveQuery_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.SupplierGroup> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SupplierGroupsActiveQuery_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SupplierGroup> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SupplierGroupsActiveQuery_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SupplierActiveQuery_Executing(string SupplierName);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SupplierActiveQuery_PreprocessQuery(string SupplierName, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Supplier> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SupplierActiveQuery_Executed(string SupplierName, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Supplier> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void SupplierActiveQuery_ExecuteFailed(string SupplierName, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransportRoutesActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TransportRoutesActiveQuery_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransportRoutesActiveQuery_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.TransportRoute> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TransportRoutesActiveQuery_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TransportRoute> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void TransportRoutesActiveQuery_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasuresActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void UnitOfMeasuresActiveQuery_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UnitOfMeasuresActiveQuery_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UnitOfMeasure> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void UnitOfMeasuresActiveQuery_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UnitOfMeasure> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void UnitOfMeasuresActiveQuery_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkersActiveQuery_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void WorkersActiveQuery_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void WorkersActiveQuery_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Worker> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void WorkersActiveQuery_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Worker> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void WorkersActiveQuery_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Bank>
                __BanksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Bank>(
                    "Banks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Banks_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Banks_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Banks_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Banks_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Banks_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Banks_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Banks_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Banks_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Banks_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Banks_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Banks_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Banks_Filter);
            private static bool __Banks_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Banks_CanInsert(ref result);
                return result;
            }
            private static bool __Banks_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Banks_CanUpdate(ref result);
                return result;
            }
            private static bool __Banks_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Banks_CanDelete(ref result);
                return result;
            }
            private static bool __Banks_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Banks_CanRead(ref result);
                return result;
            }
            private static void __Banks_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Bank e)
            {
                d.Banks_Inserting(e);
            }
            private static void __Banks_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Bank e)
            {
                d.Banks_Inserted(e);
            }
            private static void __Banks_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Bank e)
            {
                d.Banks_Updating(e);
            }
            private static void __Banks_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Bank e)
            {
                d.Banks_Updated(e);
            }
            private static void __Banks_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Bank e)
            {
                d.Banks_Deleting(e);
            }
            private static void __Banks_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Bank e)
            {
                d.Banks_Deleted(e);
            }
            private static void __Banks_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Bank e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Banks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Bank, bool>> __Banks_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Bank, bool>> filter = null;
                d.Banks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>
                __CompaniesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Company>(
                    "Companies",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Companies_Filter);
            private static bool __Companies_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Companies_CanInsert(ref result);
                return result;
            }
            private static bool __Companies_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Companies_CanUpdate(ref result);
                return result;
            }
            private static bool __Companies_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Companies_CanDelete(ref result);
                return result;
            }
            private static bool __Companies_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Companies_CanRead(ref result);
                return result;
            }
            private static void __Companies_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Inserting(e);
            }
            private static void __Companies_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Inserted(e);
            }
            private static void __Companies_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Updating(e);
            }
            private static void __Companies_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Updated(e);
            }
            private static void __Companies_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Deleting(e);
            }
            private static void __Companies_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companies_Deleted(e);
            }
            private static void __Companies_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Companies_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> __Companies_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> filter = null;
                d.Companies_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CustomerGroup>
                __CustomerGroupsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CustomerGroup>(
                    "CustomerGroups",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroups_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroups_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroups_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroups_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroups_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroups_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroups_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroups_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroups_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroups_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroups_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroups_Filter);
            private static bool __CustomerGroups_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CustomerGroups_CanInsert(ref result);
                return result;
            }
            private static bool __CustomerGroups_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CustomerGroups_CanUpdate(ref result);
                return result;
            }
            private static bool __CustomerGroups_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CustomerGroups_CanDelete(ref result);
                return result;
            }
            private static bool __CustomerGroups_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CustomerGroups_CanRead(ref result);
                return result;
            }
            private static void __CustomerGroups_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CustomerGroup e)
            {
                d.CustomerGroups_Inserting(e);
            }
            private static void __CustomerGroups_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CustomerGroup e)
            {
                d.CustomerGroups_Inserted(e);
            }
            private static void __CustomerGroups_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CustomerGroup e)
            {
                d.CustomerGroups_Updating(e);
            }
            private static void __CustomerGroups_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CustomerGroup e)
            {
                d.CustomerGroups_Updated(e);
            }
            private static void __CustomerGroups_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CustomerGroup e)
            {
                d.CustomerGroups_Deleting(e);
            }
            private static void __CustomerGroups_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CustomerGroup e)
            {
                d.CustomerGroups_Deleted(e);
            }
            private static void __CustomerGroups_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.CustomerGroup e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CustomerGroups_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CustomerGroup, bool>> __CustomerGroups_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CustomerGroup, bool>> filter = null;
                d.CustomerGroups_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>
                __CustomersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>(
                    "Customers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Customers_Filter);
            private static bool __Customers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanInsert(ref result);
                return result;
            }
            private static bool __Customers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanUpdate(ref result);
                return result;
            }
            private static bool __Customers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanDelete(ref result);
                return result;
            }
            private static bool __Customers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Customers_CanRead(ref result);
                return result;
            }
            private static void __Customers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Inserting(e);
            }
            private static void __Customers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Inserted(e);
            }
            private static void __Customers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Updating(e);
            }
            private static void __Customers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Updated(e);
            }
            private static void __Customers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Deleting(e);
            }
            private static void __Customers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.Customers_Deleted(e);
            }
            private static void __Customers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Customers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Customer, bool>> __Customers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Customer, bool>> filter = null;
                d.Customers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>
                __EmployeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>(
                    "Employees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Filter);
            private static bool __Employees_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanInsert(ref result);
                return result;
            }
            private static bool __Employees_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanUpdate(ref result);
                return result;
            }
            private static bool __Employees_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanDelete(ref result);
                return result;
            }
            private static bool __Employees_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanRead(ref result);
                return result;
            }
            private static void __Employees_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserting(e);
            }
            private static void __Employees_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserted(e);
            }
            private static void __Employees_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updating(e);
            }
            private static void __Employees_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updated(e);
            }
            private static void __Employees_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleting(e);
            }
            private static void __Employees_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleted(e);
            }
            private static void __Employees_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Employees_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> __Employees_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter = null;
                d.Employees_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Location>
                __LocationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Location>(
                    "Locations",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Locations_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Locations_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Locations_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Locations_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Locations_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Locations_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Locations_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Locations_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Locations_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Locations_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Locations_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Locations_Filter);
            private static bool __Locations_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Locations_CanInsert(ref result);
                return result;
            }
            private static bool __Locations_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Locations_CanUpdate(ref result);
                return result;
            }
            private static bool __Locations_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Locations_CanDelete(ref result);
                return result;
            }
            private static bool __Locations_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Locations_CanRead(ref result);
                return result;
            }
            private static void __Locations_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Location e)
            {
                d.Locations_Inserting(e);
            }
            private static void __Locations_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Location e)
            {
                d.Locations_Inserted(e);
            }
            private static void __Locations_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Location e)
            {
                d.Locations_Updating(e);
            }
            private static void __Locations_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Location e)
            {
                d.Locations_Updated(e);
            }
            private static void __Locations_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Location e)
            {
                d.Locations_Deleting(e);
            }
            private static void __Locations_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Location e)
            {
                d.Locations_Deleted(e);
            }
            private static void __Locations_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Location e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Locations_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Location, bool>> __Locations_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Location, bool>> filter = null;
                d.Locations_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Machine>
                __MachinesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Machine>(
                    "Machines",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Machines_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Machines_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Machines_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Machines_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Machines_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Machines_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Machines_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Machines_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Machines_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Machines_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Machines_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Machines_Filter);
            private static bool __Machines_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Machines_CanInsert(ref result);
                return result;
            }
            private static bool __Machines_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Machines_CanUpdate(ref result);
                return result;
            }
            private static bool __Machines_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Machines_CanDelete(ref result);
                return result;
            }
            private static bool __Machines_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Machines_CanRead(ref result);
                return result;
            }
            private static void __Machines_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Machine e)
            {
                d.Machines_Inserting(e);
            }
            private static void __Machines_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Machine e)
            {
                d.Machines_Inserted(e);
            }
            private static void __Machines_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Machine e)
            {
                d.Machines_Updating(e);
            }
            private static void __Machines_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Machine e)
            {
                d.Machines_Updated(e);
            }
            private static void __Machines_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Machine e)
            {
                d.Machines_Deleting(e);
            }
            private static void __Machines_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Machine e)
            {
                d.Machines_Deleted(e);
            }
            private static void __Machines_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Machine e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Machines_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Machine, bool>> __Machines_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Machine, bool>> filter = null;
                d.Machines_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OrderDetail>
                __OrderDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OrderDetail>(
                    "OrderDetails",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetails_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetails_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetails_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetails_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetails_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetails_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetails_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetails_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetails_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetails_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetails_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetails_Filter);
            private static bool __OrderDetails_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderDetails_CanInsert(ref result);
                return result;
            }
            private static bool __OrderDetails_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __OrderDetails_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderDetails_CanDelete(ref result);
                return result;
            }
            private static bool __OrderDetails_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderDetails_CanRead(ref result);
                return result;
            }
            private static void __OrderDetails_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderDetail e)
            {
                d.OrderDetails_Inserting(e);
            }
            private static void __OrderDetails_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderDetail e)
            {
                d.OrderDetails_Inserted(e);
            }
            private static void __OrderDetails_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderDetail e)
            {
                d.OrderDetails_Updating(e);
            }
            private static void __OrderDetails_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderDetail e)
            {
                d.OrderDetails_Updated(e);
            }
            private static void __OrderDetails_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderDetail e)
            {
                d.OrderDetails_Deleting(e);
            }
            private static void __OrderDetails_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderDetail e)
            {
                d.OrderDetails_Deleted(e);
            }
            private static void __OrderDetails_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrderDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderDetail, bool>> __OrderDetails_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderDetail, bool>> filter = null;
                d.OrderDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Order>
                __OrdersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Order>(
                    "Orders",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Orders_Filter);
            private static bool __Orders_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Orders_CanInsert(ref result);
                return result;
            }
            private static bool __Orders_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Orders_CanUpdate(ref result);
                return result;
            }
            private static bool __Orders_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Orders_CanDelete(ref result);
                return result;
            }
            private static bool __Orders_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Orders_CanRead(ref result);
                return result;
            }
            private static void __Orders_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Inserting(e);
            }
            private static void __Orders_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Inserted(e);
            }
            private static void __Orders_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Updating(e);
            }
            private static void __Orders_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Updated(e);
            }
            private static void __Orders_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Deleting(e);
            }
            private static void __Orders_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Order e)
            {
                d.Orders_Deleted(e);
            }
            private static void __Orders_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Orders_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Order, bool>> __Orders_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Order, bool>> filter = null;
                d.Orders_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Package>
                __PackagesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Package>(
                    "Packages",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Packages_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Packages_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Packages_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Packages_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Packages_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Packages_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Packages_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Packages_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Packages_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Packages_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Packages_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Packages_Filter);
            private static bool __Packages_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Packages_CanInsert(ref result);
                return result;
            }
            private static bool __Packages_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Packages_CanUpdate(ref result);
                return result;
            }
            private static bool __Packages_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Packages_CanDelete(ref result);
                return result;
            }
            private static bool __Packages_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Packages_CanRead(ref result);
                return result;
            }
            private static void __Packages_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Inserting(e);
            }
            private static void __Packages_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Inserted(e);
            }
            private static void __Packages_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Updating(e);
            }
            private static void __Packages_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Updated(e);
            }
            private static void __Packages_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Deleting(e);
            }
            private static void __Packages_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Package e)
            {
                d.Packages_Deleted(e);
            }
            private static void __Packages_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Package e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Packages_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Package, bool>> __Packages_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Package, bool>> filter = null;
                d.Packages_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PaymentType>
                __PaymentTypesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PaymentType>(
                    "PaymentTypes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypes_Filter);
            private static bool __PaymentTypes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PaymentTypes_CanInsert(ref result);
                return result;
            }
            private static bool __PaymentTypes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PaymentTypes_CanUpdate(ref result);
                return result;
            }
            private static bool __PaymentTypes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PaymentTypes_CanDelete(ref result);
                return result;
            }
            private static bool __PaymentTypes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PaymentTypes_CanRead(ref result);
                return result;
            }
            private static void __PaymentTypes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PaymentType e)
            {
                d.PaymentTypes_Inserting(e);
            }
            private static void __PaymentTypes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PaymentType e)
            {
                d.PaymentTypes_Inserted(e);
            }
            private static void __PaymentTypes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PaymentType e)
            {
                d.PaymentTypes_Updating(e);
            }
            private static void __PaymentTypes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PaymentType e)
            {
                d.PaymentTypes_Updated(e);
            }
            private static void __PaymentTypes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PaymentType e)
            {
                d.PaymentTypes_Deleting(e);
            }
            private static void __PaymentTypes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PaymentType e)
            {
                d.PaymentTypes_Deleted(e);
            }
            private static void __PaymentTypes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PaymentType e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PaymentTypes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PaymentType, bool>> __PaymentTypes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PaymentType, bool>> filter = null;
                d.PaymentTypes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductCategory>
                __ProductCategoriesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductCategory>(
                    "ProductCategories",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategories_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategories_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategories_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategories_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategories_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategories_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategories_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategories_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategories_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategories_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategories_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategories_Filter);
            private static bool __ProductCategories_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductCategories_CanInsert(ref result);
                return result;
            }
            private static bool __ProductCategories_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductCategories_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductCategories_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductCategories_CanDelete(ref result);
                return result;
            }
            private static bool __ProductCategories_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductCategories_CanRead(ref result);
                return result;
            }
            private static void __ProductCategories_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductCategory e)
            {
                d.ProductCategories_Inserting(e);
            }
            private static void __ProductCategories_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductCategory e)
            {
                d.ProductCategories_Inserted(e);
            }
            private static void __ProductCategories_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductCategory e)
            {
                d.ProductCategories_Updating(e);
            }
            private static void __ProductCategories_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductCategory e)
            {
                d.ProductCategories_Updated(e);
            }
            private static void __ProductCategories_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductCategory e)
            {
                d.ProductCategories_Deleting(e);
            }
            private static void __ProductCategories_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductCategory e)
            {
                d.ProductCategories_Deleted(e);
            }
            private static void __ProductCategories_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductCategory e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductCategories_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductCategory, bool>> __ProductCategories_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductCategory, bool>> filter = null;
                d.ProductCategories_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductGroup>
                __ProductGroupsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductGroup>(
                    "ProductGroups",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroups_Filter);
            private static bool __ProductGroups_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductGroups_CanInsert(ref result);
                return result;
            }
            private static bool __ProductGroups_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductGroups_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductGroups_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductGroups_CanDelete(ref result);
                return result;
            }
            private static bool __ProductGroups_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductGroups_CanRead(ref result);
                return result;
            }
            private static void __ProductGroups_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductGroup e)
            {
                d.ProductGroups_Inserting(e);
            }
            private static void __ProductGroups_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductGroup e)
            {
                d.ProductGroups_Inserted(e);
            }
            private static void __ProductGroups_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductGroup e)
            {
                d.ProductGroups_Updating(e);
            }
            private static void __ProductGroups_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductGroup e)
            {
                d.ProductGroups_Updated(e);
            }
            private static void __ProductGroups_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductGroup e)
            {
                d.ProductGroups_Deleting(e);
            }
            private static void __ProductGroups_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductGroup e)
            {
                d.ProductGroups_Deleted(e);
            }
            private static void __ProductGroups_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductGroup e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductGroups_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductGroup, bool>> __ProductGroups_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductGroup, bool>> filter = null;
                d.ProductGroups_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductReceiveBalanceForwardDetail>
                __ProductReceiveBalanceForwardDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductReceiveBalanceForwardDetail>(
                    "ProductReceiveBalanceForwardDetails",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwardDetails_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwardDetails_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwardDetails_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwardDetails_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwardDetails_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwardDetails_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwardDetails_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwardDetails_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwardDetails_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwardDetails_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwardDetails_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwardDetails_Filter);
            private static bool __ProductReceiveBalanceForwardDetails_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductReceiveBalanceForwardDetails_CanInsert(ref result);
                return result;
            }
            private static bool __ProductReceiveBalanceForwardDetails_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductReceiveBalanceForwardDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductReceiveBalanceForwardDetails_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductReceiveBalanceForwardDetails_CanDelete(ref result);
                return result;
            }
            private static bool __ProductReceiveBalanceForwardDetails_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductReceiveBalanceForwardDetails_CanRead(ref result);
                return result;
            }
            private static void __ProductReceiveBalanceForwardDetails_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductReceiveBalanceForwardDetail e)
            {
                d.ProductReceiveBalanceForwardDetails_Inserting(e);
            }
            private static void __ProductReceiveBalanceForwardDetails_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductReceiveBalanceForwardDetail e)
            {
                d.ProductReceiveBalanceForwardDetails_Inserted(e);
            }
            private static void __ProductReceiveBalanceForwardDetails_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductReceiveBalanceForwardDetail e)
            {
                d.ProductReceiveBalanceForwardDetails_Updating(e);
            }
            private static void __ProductReceiveBalanceForwardDetails_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductReceiveBalanceForwardDetail e)
            {
                d.ProductReceiveBalanceForwardDetails_Updated(e);
            }
            private static void __ProductReceiveBalanceForwardDetails_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductReceiveBalanceForwardDetail e)
            {
                d.ProductReceiveBalanceForwardDetails_Deleting(e);
            }
            private static void __ProductReceiveBalanceForwardDetails_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductReceiveBalanceForwardDetail e)
            {
                d.ProductReceiveBalanceForwardDetails_Deleted(e);
            }
            private static void __ProductReceiveBalanceForwardDetails_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductReceiveBalanceForwardDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductReceiveBalanceForwardDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductReceiveBalanceForwardDetail, bool>> __ProductReceiveBalanceForwardDetails_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductReceiveBalanceForwardDetail, bool>> filter = null;
                d.ProductReceiveBalanceForwardDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductReceiveBalanceForward>
                __ProductReceiveBalanceForwardsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductReceiveBalanceForward>(
                    "ProductReceiveBalanceForwards",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwards_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwards_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwards_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwards_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwards_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwards_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwards_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwards_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwards_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwards_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwards_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductReceiveBalanceForwards_Filter);
            private static bool __ProductReceiveBalanceForwards_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductReceiveBalanceForwards_CanInsert(ref result);
                return result;
            }
            private static bool __ProductReceiveBalanceForwards_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductReceiveBalanceForwards_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductReceiveBalanceForwards_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductReceiveBalanceForwards_CanDelete(ref result);
                return result;
            }
            private static bool __ProductReceiveBalanceForwards_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductReceiveBalanceForwards_CanRead(ref result);
                return result;
            }
            private static void __ProductReceiveBalanceForwards_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductReceiveBalanceForward e)
            {
                d.ProductReceiveBalanceForwards_Inserting(e);
            }
            private static void __ProductReceiveBalanceForwards_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductReceiveBalanceForward e)
            {
                d.ProductReceiveBalanceForwards_Inserted(e);
            }
            private static void __ProductReceiveBalanceForwards_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductReceiveBalanceForward e)
            {
                d.ProductReceiveBalanceForwards_Updating(e);
            }
            private static void __ProductReceiveBalanceForwards_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductReceiveBalanceForward e)
            {
                d.ProductReceiveBalanceForwards_Updated(e);
            }
            private static void __ProductReceiveBalanceForwards_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductReceiveBalanceForward e)
            {
                d.ProductReceiveBalanceForwards_Deleting(e);
            }
            private static void __ProductReceiveBalanceForwards_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductReceiveBalanceForward e)
            {
                d.ProductReceiveBalanceForwards_Deleted(e);
            }
            private static void __ProductReceiveBalanceForwards_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductReceiveBalanceForward e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductReceiveBalanceForwards_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductReceiveBalanceForward, bool>> __ProductReceiveBalanceForwards_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductReceiveBalanceForward, bool>> filter = null;
                d.ProductReceiveBalanceForwards_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>
                __ProductsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>(
                    "Products",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Products_Filter);
            private static bool __Products_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Products_CanInsert(ref result);
                return result;
            }
            private static bool __Products_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Products_CanUpdate(ref result);
                return result;
            }
            private static bool __Products_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Products_CanDelete(ref result);
                return result;
            }
            private static bool __Products_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Products_CanRead(ref result);
                return result;
            }
            private static void __Products_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Inserting(e);
            }
            private static void __Products_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Inserted(e);
            }
            private static void __Products_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Updating(e);
            }
            private static void __Products_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Updated(e);
            }
            private static void __Products_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Deleting(e);
            }
            private static void __Products_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.Products_Deleted(e);
            }
            private static void __Products_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Products_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Product, bool>> __Products_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Product, bool>> filter = null;
                d.Products_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductSubscriber>
                __ProductSubscribersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductSubscriber>(
                    "ProductSubscribers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSubscribers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSubscribers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSubscribers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSubscribers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSubscribers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSubscribers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSubscribers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSubscribers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSubscribers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSubscribers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSubscribers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSubscribers_Filter);
            private static bool __ProductSubscribers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductSubscribers_CanInsert(ref result);
                return result;
            }
            private static bool __ProductSubscribers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductSubscribers_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductSubscribers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductSubscribers_CanDelete(ref result);
                return result;
            }
            private static bool __ProductSubscribers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductSubscribers_CanRead(ref result);
                return result;
            }
            private static void __ProductSubscribers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductSubscriber e)
            {
                d.ProductSubscribers_Inserting(e);
            }
            private static void __ProductSubscribers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductSubscriber e)
            {
                d.ProductSubscribers_Inserted(e);
            }
            private static void __ProductSubscribers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductSubscriber e)
            {
                d.ProductSubscribers_Updating(e);
            }
            private static void __ProductSubscribers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductSubscriber e)
            {
                d.ProductSubscribers_Updated(e);
            }
            private static void __ProductSubscribers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductSubscriber e)
            {
                d.ProductSubscribers_Deleting(e);
            }
            private static void __ProductSubscribers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductSubscriber e)
            {
                d.ProductSubscribers_Deleted(e);
            }
            private static void __ProductSubscribers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ProductSubscriber e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductSubscribers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductSubscriber, bool>> __ProductSubscribers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductSubscriber, bool>> filter = null;
                d.ProductSubscribers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrderDetail>
                __PurchaseOrderDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrderDetail>(
                    "PurchaseOrderDetails",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetails_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetails_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetails_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetails_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetails_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetails_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetails_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetails_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetails_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetails_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetails_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetails_Filter);
            private static bool __PurchaseOrderDetails_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrderDetails_CanInsert(ref result);
                return result;
            }
            private static bool __PurchaseOrderDetails_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrderDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __PurchaseOrderDetails_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrderDetails_CanDelete(ref result);
                return result;
            }
            private static bool __PurchaseOrderDetails_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrderDetails_CanRead(ref result);
                return result;
            }
            private static void __PurchaseOrderDetails_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderDetail e)
            {
                d.PurchaseOrderDetails_Inserting(e);
            }
            private static void __PurchaseOrderDetails_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderDetail e)
            {
                d.PurchaseOrderDetails_Inserted(e);
            }
            private static void __PurchaseOrderDetails_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderDetail e)
            {
                d.PurchaseOrderDetails_Updating(e);
            }
            private static void __PurchaseOrderDetails_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderDetail e)
            {
                d.PurchaseOrderDetails_Updated(e);
            }
            private static void __PurchaseOrderDetails_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderDetail e)
            {
                d.PurchaseOrderDetails_Deleting(e);
            }
            private static void __PurchaseOrderDetails_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderDetail e)
            {
                d.PurchaseOrderDetails_Deleted(e);
            }
            private static void __PurchaseOrderDetails_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrderDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PurchaseOrderDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrderDetail, bool>> __PurchaseOrderDetails_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrderDetail, bool>> filter = null;
                d.PurchaseOrderDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrder>
                __PurchaseOrdersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrder>(
                    "PurchaseOrders",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrders_Filter);
            private static bool __PurchaseOrders_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrders_CanInsert(ref result);
                return result;
            }
            private static bool __PurchaseOrders_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrders_CanUpdate(ref result);
                return result;
            }
            private static bool __PurchaseOrders_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrders_CanDelete(ref result);
                return result;
            }
            private static bool __PurchaseOrders_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.PurchaseOrders_CanRead(ref result);
                return result;
            }
            private static void __PurchaseOrders_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Inserting(e);
            }
            private static void __PurchaseOrders_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Inserted(e);
            }
            private static void __PurchaseOrders_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Updating(e);
            }
            private static void __PurchaseOrders_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Updated(e);
            }
            private static void __PurchaseOrders_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Deleting(e);
            }
            private static void __PurchaseOrders_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrder e)
            {
                d.PurchaseOrders_Deleted(e);
            }
            private static void __PurchaseOrders_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.PurchaseOrder e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.PurchaseOrders_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrder, bool>> __PurchaseOrders_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.PurchaseOrder, bool>> filter = null;
                d.PurchaseOrders_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail>
                __ReceiveFromPurchaseOrderDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail>(
                    "ReceiveFromPurchaseOrderDetails",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrderDetails_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrderDetails_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrderDetails_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrderDetails_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrderDetails_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrderDetails_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrderDetails_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrderDetails_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrderDetails_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrderDetails_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrderDetails_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrderDetails_Filter);
            private static bool __ReceiveFromPurchaseOrderDetails_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReceiveFromPurchaseOrderDetails_CanInsert(ref result);
                return result;
            }
            private static bool __ReceiveFromPurchaseOrderDetails_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReceiveFromPurchaseOrderDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __ReceiveFromPurchaseOrderDetails_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReceiveFromPurchaseOrderDetails_CanDelete(ref result);
                return result;
            }
            private static bool __ReceiveFromPurchaseOrderDetails_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReceiveFromPurchaseOrderDetails_CanRead(ref result);
                return result;
            }
            private static void __ReceiveFromPurchaseOrderDetails_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail e)
            {
                d.ReceiveFromPurchaseOrderDetails_Inserting(e);
            }
            private static void __ReceiveFromPurchaseOrderDetails_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail e)
            {
                d.ReceiveFromPurchaseOrderDetails_Inserted(e);
            }
            private static void __ReceiveFromPurchaseOrderDetails_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail e)
            {
                d.ReceiveFromPurchaseOrderDetails_Updating(e);
            }
            private static void __ReceiveFromPurchaseOrderDetails_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail e)
            {
                d.ReceiveFromPurchaseOrderDetails_Updated(e);
            }
            private static void __ReceiveFromPurchaseOrderDetails_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail e)
            {
                d.ReceiveFromPurchaseOrderDetails_Deleting(e);
            }
            private static void __ReceiveFromPurchaseOrderDetails_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail e)
            {
                d.ReceiveFromPurchaseOrderDetails_Deleted(e);
            }
            private static void __ReceiveFromPurchaseOrderDetails_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ReceiveFromPurchaseOrderDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail, bool>> __ReceiveFromPurchaseOrderDetails_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReceiveFromPurchaseOrderDetail, bool>> filter = null;
                d.ReceiveFromPurchaseOrderDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ReceiveFromPurchaseOrder>
                __ReceiveFromPurchaseOrdersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ReceiveFromPurchaseOrder>(
                    "ReceiveFromPurchaseOrders",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrders_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrders_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrders_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrders_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrders_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrders_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrders_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrders_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrders_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrders_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrders_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ReceiveFromPurchaseOrders_Filter);
            private static bool __ReceiveFromPurchaseOrders_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReceiveFromPurchaseOrders_CanInsert(ref result);
                return result;
            }
            private static bool __ReceiveFromPurchaseOrders_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReceiveFromPurchaseOrders_CanUpdate(ref result);
                return result;
            }
            private static bool __ReceiveFromPurchaseOrders_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReceiveFromPurchaseOrders_CanDelete(ref result);
                return result;
            }
            private static bool __ReceiveFromPurchaseOrders_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ReceiveFromPurchaseOrders_CanRead(ref result);
                return result;
            }
            private static void __ReceiveFromPurchaseOrders_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReceiveFromPurchaseOrder e)
            {
                d.ReceiveFromPurchaseOrders_Inserting(e);
            }
            private static void __ReceiveFromPurchaseOrders_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReceiveFromPurchaseOrder e)
            {
                d.ReceiveFromPurchaseOrders_Inserted(e);
            }
            private static void __ReceiveFromPurchaseOrders_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReceiveFromPurchaseOrder e)
            {
                d.ReceiveFromPurchaseOrders_Updating(e);
            }
            private static void __ReceiveFromPurchaseOrders_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReceiveFromPurchaseOrder e)
            {
                d.ReceiveFromPurchaseOrders_Updated(e);
            }
            private static void __ReceiveFromPurchaseOrders_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReceiveFromPurchaseOrder e)
            {
                d.ReceiveFromPurchaseOrders_Deleting(e);
            }
            private static void __ReceiveFromPurchaseOrders_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReceiveFromPurchaseOrder e)
            {
                d.ReceiveFromPurchaseOrders_Deleted(e);
            }
            private static void __ReceiveFromPurchaseOrders_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ReceiveFromPurchaseOrder e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ReceiveFromPurchaseOrders_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReceiveFromPurchaseOrder, bool>> __ReceiveFromPurchaseOrders_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ReceiveFromPurchaseOrder, bool>> filter = null;
                d.ReceiveFromPurchaseOrders_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SaleOrderDetail>
                __SaleOrderDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SaleOrderDetail>(
                    "SaleOrderDetails",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrderDetails_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrderDetails_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrderDetails_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrderDetails_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrderDetails_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrderDetails_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrderDetails_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrderDetails_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrderDetails_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrderDetails_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrderDetails_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrderDetails_Filter);
            private static bool __SaleOrderDetails_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SaleOrderDetails_CanInsert(ref result);
                return result;
            }
            private static bool __SaleOrderDetails_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SaleOrderDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __SaleOrderDetails_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SaleOrderDetails_CanDelete(ref result);
                return result;
            }
            private static bool __SaleOrderDetails_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SaleOrderDetails_CanRead(ref result);
                return result;
            }
            private static void __SaleOrderDetails_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SaleOrderDetail e)
            {
                d.SaleOrderDetails_Inserting(e);
            }
            private static void __SaleOrderDetails_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SaleOrderDetail e)
            {
                d.SaleOrderDetails_Inserted(e);
            }
            private static void __SaleOrderDetails_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SaleOrderDetail e)
            {
                d.SaleOrderDetails_Updating(e);
            }
            private static void __SaleOrderDetails_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SaleOrderDetail e)
            {
                d.SaleOrderDetails_Updated(e);
            }
            private static void __SaleOrderDetails_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SaleOrderDetail e)
            {
                d.SaleOrderDetails_Deleting(e);
            }
            private static void __SaleOrderDetails_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SaleOrderDetail e)
            {
                d.SaleOrderDetails_Deleted(e);
            }
            private static void __SaleOrderDetails_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SaleOrderDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SaleOrderDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SaleOrderDetail, bool>> __SaleOrderDetails_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SaleOrderDetail, bool>> filter = null;
                d.SaleOrderDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SaleOrder>
                __SaleOrdersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SaleOrder>(
                    "SaleOrders",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrders_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrders_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrders_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrders_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrders_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrders_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrders_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrders_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrders_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrders_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrders_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaleOrders_Filter);
            private static bool __SaleOrders_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SaleOrders_CanInsert(ref result);
                return result;
            }
            private static bool __SaleOrders_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SaleOrders_CanUpdate(ref result);
                return result;
            }
            private static bool __SaleOrders_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SaleOrders_CanDelete(ref result);
                return result;
            }
            private static bool __SaleOrders_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SaleOrders_CanRead(ref result);
                return result;
            }
            private static void __SaleOrders_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SaleOrder e)
            {
                d.SaleOrders_Inserting(e);
            }
            private static void __SaleOrders_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SaleOrder e)
            {
                d.SaleOrders_Inserted(e);
            }
            private static void __SaleOrders_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SaleOrder e)
            {
                d.SaleOrders_Updating(e);
            }
            private static void __SaleOrders_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SaleOrder e)
            {
                d.SaleOrders_Updated(e);
            }
            private static void __SaleOrders_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SaleOrder e)
            {
                d.SaleOrders_Deleting(e);
            }
            private static void __SaleOrders_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SaleOrder e)
            {
                d.SaleOrders_Deleted(e);
            }
            private static void __SaleOrders_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SaleOrder e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SaleOrders_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SaleOrder, bool>> __SaleOrders_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SaleOrder, bool>> filter = null;
                d.SaleOrders_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ShippingMethod>
                __ShippingMethodsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ShippingMethod>(
                    "ShippingMethods",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ShippingMethods_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ShippingMethods_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ShippingMethods_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ShippingMethods_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ShippingMethods_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ShippingMethods_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ShippingMethods_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ShippingMethods_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ShippingMethods_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ShippingMethods_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ShippingMethods_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ShippingMethods_Filter);
            private static bool __ShippingMethods_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ShippingMethods_CanInsert(ref result);
                return result;
            }
            private static bool __ShippingMethods_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ShippingMethods_CanUpdate(ref result);
                return result;
            }
            private static bool __ShippingMethods_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ShippingMethods_CanDelete(ref result);
                return result;
            }
            private static bool __ShippingMethods_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ShippingMethods_CanRead(ref result);
                return result;
            }
            private static void __ShippingMethods_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ShippingMethod e)
            {
                d.ShippingMethods_Inserting(e);
            }
            private static void __ShippingMethods_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ShippingMethod e)
            {
                d.ShippingMethods_Inserted(e);
            }
            private static void __ShippingMethods_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ShippingMethod e)
            {
                d.ShippingMethods_Updating(e);
            }
            private static void __ShippingMethods_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ShippingMethod e)
            {
                d.ShippingMethods_Updated(e);
            }
            private static void __ShippingMethods_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ShippingMethod e)
            {
                d.ShippingMethods_Deleting(e);
            }
            private static void __ShippingMethods_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ShippingMethod e)
            {
                d.ShippingMethods_Deleted(e);
            }
            private static void __ShippingMethods_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ShippingMethod e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ShippingMethods_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ShippingMethod, bool>> __ShippingMethods_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ShippingMethod, bool>> filter = null;
                d.ShippingMethods_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockAdjustDetail>
                __StockAdjustDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockAdjustDetail>(
                    "StockAdjustDetails",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjustDetails_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjustDetails_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjustDetails_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjustDetails_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjustDetails_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjustDetails_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjustDetails_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjustDetails_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjustDetails_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjustDetails_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjustDetails_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjustDetails_Filter);
            private static bool __StockAdjustDetails_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockAdjustDetails_CanInsert(ref result);
                return result;
            }
            private static bool __StockAdjustDetails_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockAdjustDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __StockAdjustDetails_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockAdjustDetails_CanDelete(ref result);
                return result;
            }
            private static bool __StockAdjustDetails_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockAdjustDetails_CanRead(ref result);
                return result;
            }
            private static void __StockAdjustDetails_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockAdjustDetail e)
            {
                d.StockAdjustDetails_Inserting(e);
            }
            private static void __StockAdjustDetails_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockAdjustDetail e)
            {
                d.StockAdjustDetails_Inserted(e);
            }
            private static void __StockAdjustDetails_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockAdjustDetail e)
            {
                d.StockAdjustDetails_Updating(e);
            }
            private static void __StockAdjustDetails_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockAdjustDetail e)
            {
                d.StockAdjustDetails_Updated(e);
            }
            private static void __StockAdjustDetails_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockAdjustDetail e)
            {
                d.StockAdjustDetails_Deleting(e);
            }
            private static void __StockAdjustDetails_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockAdjustDetail e)
            {
                d.StockAdjustDetails_Deleted(e);
            }
            private static void __StockAdjustDetails_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockAdjustDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.StockAdjustDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockAdjustDetail, bool>> __StockAdjustDetails_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockAdjustDetail, bool>> filter = null;
                d.StockAdjustDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockAdjust>
                __StockAdjustsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockAdjust>(
                    "StockAdjusts",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjusts_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjusts_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjusts_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjusts_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjusts_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjusts_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjusts_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjusts_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjusts_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjusts_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjusts_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockAdjusts_Filter);
            private static bool __StockAdjusts_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockAdjusts_CanInsert(ref result);
                return result;
            }
            private static bool __StockAdjusts_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockAdjusts_CanUpdate(ref result);
                return result;
            }
            private static bool __StockAdjusts_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockAdjusts_CanDelete(ref result);
                return result;
            }
            private static bool __StockAdjusts_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockAdjusts_CanRead(ref result);
                return result;
            }
            private static void __StockAdjusts_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockAdjust e)
            {
                d.StockAdjusts_Inserting(e);
            }
            private static void __StockAdjusts_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockAdjust e)
            {
                d.StockAdjusts_Inserted(e);
            }
            private static void __StockAdjusts_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockAdjust e)
            {
                d.StockAdjusts_Updating(e);
            }
            private static void __StockAdjusts_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockAdjust e)
            {
                d.StockAdjusts_Updated(e);
            }
            private static void __StockAdjusts_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockAdjust e)
            {
                d.StockAdjusts_Deleting(e);
            }
            private static void __StockAdjusts_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockAdjust e)
            {
                d.StockAdjusts_Deleted(e);
            }
            private static void __StockAdjusts_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockAdjust e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.StockAdjusts_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockAdjust, bool>> __StockAdjusts_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockAdjust, bool>> filter = null;
                d.StockAdjusts_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockCheckDetail>
                __StockCheckDetailsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockCheckDetail>(
                    "StockCheckDetails",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockCheckDetails_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockCheckDetails_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockCheckDetails_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockCheckDetails_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockCheckDetails_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockCheckDetails_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockCheckDetails_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockCheckDetails_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockCheckDetails_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockCheckDetails_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockCheckDetails_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockCheckDetails_Filter);
            private static bool __StockCheckDetails_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockCheckDetails_CanInsert(ref result);
                return result;
            }
            private static bool __StockCheckDetails_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockCheckDetails_CanUpdate(ref result);
                return result;
            }
            private static bool __StockCheckDetails_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockCheckDetails_CanDelete(ref result);
                return result;
            }
            private static bool __StockCheckDetails_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockCheckDetails_CanRead(ref result);
                return result;
            }
            private static void __StockCheckDetails_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockCheckDetail e)
            {
                d.StockCheckDetails_Inserting(e);
            }
            private static void __StockCheckDetails_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockCheckDetail e)
            {
                d.StockCheckDetails_Inserted(e);
            }
            private static void __StockCheckDetails_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockCheckDetail e)
            {
                d.StockCheckDetails_Updating(e);
            }
            private static void __StockCheckDetails_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockCheckDetail e)
            {
                d.StockCheckDetails_Updated(e);
            }
            private static void __StockCheckDetails_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockCheckDetail e)
            {
                d.StockCheckDetails_Deleting(e);
            }
            private static void __StockCheckDetails_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockCheckDetail e)
            {
                d.StockCheckDetails_Deleted(e);
            }
            private static void __StockCheckDetails_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockCheckDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.StockCheckDetails_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockCheckDetail, bool>> __StockCheckDetails_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockCheckDetail, bool>> filter = null;
                d.StockCheckDetails_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockCheck>
                __StockChecksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockCheck>(
                    "StockChecks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockChecks_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockChecks_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockChecks_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockChecks_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockChecks_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockChecks_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockChecks_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockChecks_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockChecks_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockChecks_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockChecks_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockChecks_Filter);
            private static bool __StockChecks_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockChecks_CanInsert(ref result);
                return result;
            }
            private static bool __StockChecks_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockChecks_CanUpdate(ref result);
                return result;
            }
            private static bool __StockChecks_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockChecks_CanDelete(ref result);
                return result;
            }
            private static bool __StockChecks_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockChecks_CanRead(ref result);
                return result;
            }
            private static void __StockChecks_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockCheck e)
            {
                d.StockChecks_Inserting(e);
            }
            private static void __StockChecks_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockCheck e)
            {
                d.StockChecks_Inserted(e);
            }
            private static void __StockChecks_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockCheck e)
            {
                d.StockChecks_Updating(e);
            }
            private static void __StockChecks_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockCheck e)
            {
                d.StockChecks_Updated(e);
            }
            private static void __StockChecks_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockCheck e)
            {
                d.StockChecks_Deleting(e);
            }
            private static void __StockChecks_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockCheck e)
            {
                d.StockChecks_Deleted(e);
            }
            private static void __StockChecks_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockCheck e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.StockChecks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockCheck, bool>> __StockChecks_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockCheck, bool>> filter = null;
                d.StockChecks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockOnHand>
                __StockOnHandsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockOnHand>(
                    "StockOnHands",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHands_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHands_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHands_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHands_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHands_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHands_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHands_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHands_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHands_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHands_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHands_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHands_Filter);
            private static bool __StockOnHands_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockOnHands_CanInsert(ref result);
                return result;
            }
            private static bool __StockOnHands_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockOnHands_CanUpdate(ref result);
                return result;
            }
            private static bool __StockOnHands_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockOnHands_CanDelete(ref result);
                return result;
            }
            private static bool __StockOnHands_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockOnHands_CanRead(ref result);
                return result;
            }
            private static void __StockOnHands_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockOnHand e)
            {
                d.StockOnHands_Inserting(e);
            }
            private static void __StockOnHands_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockOnHand e)
            {
                d.StockOnHands_Inserted(e);
            }
            private static void __StockOnHands_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockOnHand e)
            {
                d.StockOnHands_Updating(e);
            }
            private static void __StockOnHands_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockOnHand e)
            {
                d.StockOnHands_Updated(e);
            }
            private static void __StockOnHands_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockOnHand e)
            {
                d.StockOnHands_Deleting(e);
            }
            private static void __StockOnHands_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockOnHand e)
            {
                d.StockOnHands_Deleted(e);
            }
            private static void __StockOnHands_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockOnHand e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.StockOnHands_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockOnHand, bool>> __StockOnHands_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockOnHand, bool>> filter = null;
                d.StockOnHands_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockTransaction>
                __StockTransactionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockTransaction>(
                    "StockTransactions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransactions_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransactions_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransactions_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransactions_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransactions_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransactions_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransactions_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransactions_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransactions_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransactions_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransactions_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransactions_Filter);
            private static bool __StockTransactions_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockTransactions_CanInsert(ref result);
                return result;
            }
            private static bool __StockTransactions_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockTransactions_CanUpdate(ref result);
                return result;
            }
            private static bool __StockTransactions_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockTransactions_CanDelete(ref result);
                return result;
            }
            private static bool __StockTransactions_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockTransactions_CanRead(ref result);
                return result;
            }
            private static void __StockTransactions_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockTransaction e)
            {
                d.StockTransactions_Inserting(e);
            }
            private static void __StockTransactions_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockTransaction e)
            {
                d.StockTransactions_Inserted(e);
            }
            private static void __StockTransactions_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockTransaction e)
            {
                d.StockTransactions_Updating(e);
            }
            private static void __StockTransactions_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockTransaction e)
            {
                d.StockTransactions_Updated(e);
            }
            private static void __StockTransactions_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockTransaction e)
            {
                d.StockTransactions_Deleting(e);
            }
            private static void __StockTransactions_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockTransaction e)
            {
                d.StockTransactions_Deleted(e);
            }
            private static void __StockTransactions_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockTransaction e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.StockTransactions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockTransaction, bool>> __StockTransactions_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockTransaction, bool>> filter = null;
                d.StockTransactions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockTransfer>
                __StockTransfersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockTransfer>(
                    "StockTransfers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransfers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransfers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransfers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransfers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransfers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransfers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransfers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransfers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransfers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransfers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransfers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockTransfers_Filter);
            private static bool __StockTransfers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockTransfers_CanInsert(ref result);
                return result;
            }
            private static bool __StockTransfers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockTransfers_CanUpdate(ref result);
                return result;
            }
            private static bool __StockTransfers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockTransfers_CanDelete(ref result);
                return result;
            }
            private static bool __StockTransfers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.StockTransfers_CanRead(ref result);
                return result;
            }
            private static void __StockTransfers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockTransfer e)
            {
                d.StockTransfers_Inserting(e);
            }
            private static void __StockTransfers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockTransfer e)
            {
                d.StockTransfers_Inserted(e);
            }
            private static void __StockTransfers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockTransfer e)
            {
                d.StockTransfers_Updating(e);
            }
            private static void __StockTransfers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockTransfer e)
            {
                d.StockTransfers_Updated(e);
            }
            private static void __StockTransfers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockTransfer e)
            {
                d.StockTransfers_Deleting(e);
            }
            private static void __StockTransfers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockTransfer e)
            {
                d.StockTransfers_Deleted(e);
            }
            private static void __StockTransfers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.StockTransfer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.StockTransfers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockTransfer, bool>> __StockTransfers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.StockTransfer, bool>> filter = null;
                d.StockTransfers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SupplierGroup>
                __SupplierGroupsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SupplierGroup>(
                    "SupplierGroups",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroups_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroups_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroups_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroups_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroups_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroups_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroups_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroups_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroups_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroups_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroups_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroups_Filter);
            private static bool __SupplierGroups_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SupplierGroups_CanInsert(ref result);
                return result;
            }
            private static bool __SupplierGroups_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SupplierGroups_CanUpdate(ref result);
                return result;
            }
            private static bool __SupplierGroups_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SupplierGroups_CanDelete(ref result);
                return result;
            }
            private static bool __SupplierGroups_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.SupplierGroups_CanRead(ref result);
                return result;
            }
            private static void __SupplierGroups_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SupplierGroup e)
            {
                d.SupplierGroups_Inserting(e);
            }
            private static void __SupplierGroups_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SupplierGroup e)
            {
                d.SupplierGroups_Inserted(e);
            }
            private static void __SupplierGroups_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SupplierGroup e)
            {
                d.SupplierGroups_Updating(e);
            }
            private static void __SupplierGroups_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SupplierGroup e)
            {
                d.SupplierGroups_Updated(e);
            }
            private static void __SupplierGroups_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SupplierGroup e)
            {
                d.SupplierGroups_Deleting(e);
            }
            private static void __SupplierGroups_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SupplierGroup e)
            {
                d.SupplierGroups_Deleted(e);
            }
            private static void __SupplierGroups_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.SupplierGroup e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SupplierGroups_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SupplierGroup, bool>> __SupplierGroups_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.SupplierGroup, bool>> filter = null;
                d.SupplierGroups_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Supplier>
                __SuppliersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Supplier>(
                    "Suppliers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Suppliers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Suppliers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Suppliers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Suppliers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Suppliers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Suppliers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Suppliers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Suppliers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Suppliers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Suppliers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Suppliers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Suppliers_Filter);
            private static bool __Suppliers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Suppliers_CanInsert(ref result);
                return result;
            }
            private static bool __Suppliers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Suppliers_CanUpdate(ref result);
                return result;
            }
            private static bool __Suppliers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Suppliers_CanDelete(ref result);
                return result;
            }
            private static bool __Suppliers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Suppliers_CanRead(ref result);
                return result;
            }
            private static void __Suppliers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Supplier e)
            {
                d.Suppliers_Inserting(e);
            }
            private static void __Suppliers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Supplier e)
            {
                d.Suppliers_Inserted(e);
            }
            private static void __Suppliers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Supplier e)
            {
                d.Suppliers_Updating(e);
            }
            private static void __Suppliers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Supplier e)
            {
                d.Suppliers_Updated(e);
            }
            private static void __Suppliers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Supplier e)
            {
                d.Suppliers_Deleting(e);
            }
            private static void __Suppliers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Supplier e)
            {
                d.Suppliers_Deleted(e);
            }
            private static void __Suppliers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Supplier e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Suppliers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Supplier, bool>> __Suppliers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Supplier, bool>> filter = null;
                d.Suppliers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Table1Item>
                __Table1ItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Table1Item>(
                    "Table1Items",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Filter);
            private static bool __Table1Items_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1Items_CanInsert(ref result);
                return result;
            }
            private static bool __Table1Items_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1Items_CanUpdate(ref result);
                return result;
            }
            private static bool __Table1Items_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1Items_CanDelete(ref result);
                return result;
            }
            private static bool __Table1Items_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1Items_CanRead(ref result);
                return result;
            }
            private static void __Table1Items_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Inserting(e);
            }
            private static void __Table1Items_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Inserted(e);
            }
            private static void __Table1Items_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Updating(e);
            }
            private static void __Table1Items_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Updated(e);
            }
            private static void __Table1Items_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Deleting(e);
            }
            private static void __Table1Items_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Deleted(e);
            }
            private static void __Table1Items_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Table1Items_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Table1Item, bool>> __Table1Items_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Table1Item, bool>> filter = null;
                d.Table1Items_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TransportRoute>
                __TransportRoutesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TransportRoute>(
                    "TransportRoutes",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutes_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutes_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutes_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutes_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutes_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutes_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutes_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutes_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutes_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutes_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutes_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutes_Filter);
            private static bool __TransportRoutes_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TransportRoutes_CanInsert(ref result);
                return result;
            }
            private static bool __TransportRoutes_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TransportRoutes_CanUpdate(ref result);
                return result;
            }
            private static bool __TransportRoutes_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TransportRoutes_CanDelete(ref result);
                return result;
            }
            private static bool __TransportRoutes_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.TransportRoutes_CanRead(ref result);
                return result;
            }
            private static void __TransportRoutes_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TransportRoute e)
            {
                d.TransportRoutes_Inserting(e);
            }
            private static void __TransportRoutes_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TransportRoute e)
            {
                d.TransportRoutes_Inserted(e);
            }
            private static void __TransportRoutes_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TransportRoute e)
            {
                d.TransportRoutes_Updating(e);
            }
            private static void __TransportRoutes_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TransportRoute e)
            {
                d.TransportRoutes_Updated(e);
            }
            private static void __TransportRoutes_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TransportRoute e)
            {
                d.TransportRoutes_Deleting(e);
            }
            private static void __TransportRoutes_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TransportRoute e)
            {
                d.TransportRoutes_Deleted(e);
            }
            private static void __TransportRoutes_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.TransportRoute e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.TransportRoutes_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TransportRoute, bool>> __TransportRoutes_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.TransportRoute, bool>> filter = null;
                d.TransportRoutes_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.UnitOfMeasure>
                __UnitOfMeasuresEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.UnitOfMeasure>(
                    "UnitOfMeasures",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasures_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasures_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasures_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasures_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasures_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasures_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasures_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasures_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasures_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasures_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasures_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasures_Filter);
            private static bool __UnitOfMeasures_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.UnitOfMeasures_CanInsert(ref result);
                return result;
            }
            private static bool __UnitOfMeasures_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.UnitOfMeasures_CanUpdate(ref result);
                return result;
            }
            private static bool __UnitOfMeasures_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.UnitOfMeasures_CanDelete(ref result);
                return result;
            }
            private static bool __UnitOfMeasures_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.UnitOfMeasures_CanRead(ref result);
                return result;
            }
            private static void __UnitOfMeasures_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UnitOfMeasure e)
            {
                d.UnitOfMeasures_Inserting(e);
            }
            private static void __UnitOfMeasures_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UnitOfMeasure e)
            {
                d.UnitOfMeasures_Inserted(e);
            }
            private static void __UnitOfMeasures_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UnitOfMeasure e)
            {
                d.UnitOfMeasures_Updating(e);
            }
            private static void __UnitOfMeasures_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UnitOfMeasure e)
            {
                d.UnitOfMeasures_Updated(e);
            }
            private static void __UnitOfMeasures_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UnitOfMeasure e)
            {
                d.UnitOfMeasures_Deleting(e);
            }
            private static void __UnitOfMeasures_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UnitOfMeasure e)
            {
                d.UnitOfMeasures_Deleted(e);
            }
            private static void __UnitOfMeasures_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UnitOfMeasure e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UnitOfMeasures_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UnitOfMeasure, bool>> __UnitOfMeasures_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UnitOfMeasure, bool>> filter = null;
                d.UnitOfMeasures_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Worker>
                __WorkersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Worker>(
                    "Workers",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Workers_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Workers_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Workers_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Workers_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Workers_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Workers_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Workers_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Workers_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Workers_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Workers_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Workers_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Workers_Filter);
            private static bool __Workers_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Workers_CanInsert(ref result);
                return result;
            }
            private static bool __Workers_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Workers_CanUpdate(ref result);
                return result;
            }
            private static bool __Workers_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Workers_CanDelete(ref result);
                return result;
            }
            private static bool __Workers_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Workers_CanRead(ref result);
                return result;
            }
            private static void __Workers_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Worker e)
            {
                d.Workers_Inserting(e);
            }
            private static void __Workers_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Worker e)
            {
                d.Workers_Inserted(e);
            }
            private static void __Workers_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Worker e)
            {
                d.Workers_Updating(e);
            }
            private static void __Workers_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Worker e)
            {
                d.Workers_Updated(e);
            }
            private static void __Workers_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Worker e)
            {
                d.Workers_Deleting(e);
            }
            private static void __Workers_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Worker e)
            {
                d.Workers_Deleted(e);
            }
            private static void __Workers_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Worker e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Workers_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Worker, bool>> __Workers_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Worker, bool>> filter = null;
                d.Workers_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Bank>
                __BankActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Bank>(
                    "BankActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BankActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BankActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BankActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BankActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__BankActiveQuery_PreprocessQuery);
            private static bool __BankActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.BankActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __BankActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.BankActiveQuery_Executing();
            }
            private static void __BankActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.BankActiveQuery_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Bank>)args[0]);
            }
            private static void __BankActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.BankActiveQuery_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __BankActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Bank> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Bank>)args[0];
                d.BankActiveQuery_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CustomerGroup>
                __CustomerGroupActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.CustomerGroup>(
                    "CustomerGroupActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroupActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroupActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroupActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroupActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerGroupActiveQuery_PreprocessQuery);
            private static bool __CustomerGroupActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.CustomerGroupActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __CustomerGroupActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CustomerGroupActiveQuery_Executing();
            }
            private static void __CustomerGroupActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CustomerGroupActiveQuery_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.CustomerGroup>)args[0]);
            }
            private static void __CustomerGroupActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.CustomerGroupActiveQuery_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __CustomerGroupActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.CustomerGroup> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.CustomerGroup>)args[0];
                d.CustomerGroupActiveQuery_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>
                __CustomersActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>(
                    "CustomersActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomersActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomersActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomersActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomersActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomersActiveQuery_PreprocessQuery);
            private static bool __CustomersActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.CustomersActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __CustomersActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CustomersActiveQuery_Executing();
            }
            private static void __CustomersActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CustomersActiveQuery_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Customer>)args[0]);
            }
            private static void __CustomersActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.CustomersActiveQuery_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __CustomersActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Customer> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Customer>)args[0];
                d.CustomersActiveQuery_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Location>
                __LocationActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Location>(
                    "LocationActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__LocationActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__LocationActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__LocationActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__LocationActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__LocationActiveQuery_PreprocessQuery);
            private static bool __LocationActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.LocationActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __LocationActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.LocationActiveQuery_Executing();
            }
            private static void __LocationActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.LocationActiveQuery_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Location>)args[0]);
            }
            private static void __LocationActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.LocationActiveQuery_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __LocationActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Location> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Location>)args[0];
                d.LocationActiveQuery_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Machine>
                __MachineActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Machine>(
                    "MachineActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MachineActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MachineActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MachineActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MachineActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MachineActiveQuery_PreprocessQuery);
            private static bool __MachineActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MachineActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __MachineActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MachineActiveQuery_Executing();
            }
            private static void __MachineActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MachineActiveQuery_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Machine>)args[0]);
            }
            private static void __MachineActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MachineActiveQuery_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MachineActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Machine> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Machine>)args[0];
                d.MachineActiveQuery_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Package>
                __PackageActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Package>(
                    "PackageActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PackageActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PackageActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PackageActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PackageActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PackageActiveQuery_PreprocessQuery);
            private static bool __PackageActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.PackageActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __PackageActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PackageActiveQuery_Executing();
            }
            private static void __PackageActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PackageActiveQuery_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Package>)args[0]);
            }
            private static void __PackageActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.PackageActiveQuery_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __PackageActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Package> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Package>)args[0];
                d.PackageActiveQuery_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PaymentType>
                __PaymentTypeActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PaymentType>(
                    "PaymentTypeActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypeActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypeActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypeActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypeActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PaymentTypeActiveQuery_PreprocessQuery);
            private static bool __PaymentTypeActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.PaymentTypeActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __PaymentTypeActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PaymentTypeActiveQuery_Executing();
            }
            private static void __PaymentTypeActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PaymentTypeActiveQuery_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PaymentType>)args[0]);
            }
            private static void __PaymentTypeActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.PaymentTypeActiveQuery_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __PaymentTypeActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.PaymentType> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.PaymentType>)args[0];
                d.PaymentTypeActiveQuery_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductCategory>
                __ProductCategoriesActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductCategory>(
                    "ProductCategoriesActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategoriesActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategoriesActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategoriesActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategoriesActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductCategoriesActiveQuery_PreprocessQuery);
            private static bool __ProductCategoriesActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProductCategoriesActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __ProductCategoriesActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductCategoriesActiveQuery_Executing();
            }
            private static void __ProductCategoriesActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductCategoriesActiveQuery_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductCategory>)args[0]);
            }
            private static void __ProductCategoriesActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProductCategoriesActiveQuery_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ProductCategoriesActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProductCategory> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProductCategory>)args[0];
                d.ProductCategoriesActiveQuery_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductGroup>
                __ProductGroupsActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductGroup>(
                    "ProductGroupsActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroupsActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroupsActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroupsActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroupsActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductGroupsActiveQuery_PreprocessQuery);
            private static bool __ProductGroupsActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProductGroupsActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __ProductGroupsActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductGroupsActiveQuery_Executing();
            }
            private static void __ProductGroupsActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductGroupsActiveQuery_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductGroup>)args[0]);
            }
            private static void __ProductGroupsActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProductGroupsActiveQuery_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ProductGroupsActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProductGroup> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProductGroup>)args[0];
                d.ProductGroupsActiveQuery_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductReceiveBalanceForward>
                __QueryLatestProductReceiveBalanceForwardDocumentNoEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ProductReceiveBalanceForward>(
                    "QueryLatestProductReceiveBalanceForwardDocumentNo",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__QueryLatestProductReceiveBalanceForwardDocumentNo_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__QueryLatestProductReceiveBalanceForwardDocumentNo_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__QueryLatestProductReceiveBalanceForwardDocumentNo_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__QueryLatestProductReceiveBalanceForwardDocumentNo_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__QueryLatestProductReceiveBalanceForwardDocumentNo_PreprocessQuery);
            private static bool __QueryLatestProductReceiveBalanceForwardDocumentNo_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.QueryLatestProductReceiveBalanceForwardDocumentNo_CanExecute(ref r);
                return r;
            }
            private static void __QueryLatestProductReceiveBalanceForwardDocumentNo_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.QueryLatestProductReceiveBalanceForwardDocumentNo_Executing();
            }
            private static void __QueryLatestProductReceiveBalanceForwardDocumentNo_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.QueryLatestProductReceiveBalanceForwardDocumentNo_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ProductReceiveBalanceForward>)args[0]);
            }
            private static void __QueryLatestProductReceiveBalanceForwardDocumentNo_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.QueryLatestProductReceiveBalanceForwardDocumentNo_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __QueryLatestProductReceiveBalanceForwardDocumentNo_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ProductReceiveBalanceForward> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ProductReceiveBalanceForward>)args[0];
                d.QueryLatestProductReceiveBalanceForwardDocumentNo_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>
                __ProductsActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>(
                    "ProductsActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductsActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductsActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductsActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductsActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductsActiveQuery_PreprocessQuery);
            private static bool __ProductsActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ProductsActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __ProductsActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductsActiveQuery_Executing();
            }
            private static void __ProductsActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ProductsActiveQuery_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product>)args[0]);
            }
            private static void __ProductsActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ProductsActiveQuery_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ProductsActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Product>)args[0];
                d.ProductsActiveQuery_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrderDetail>
                __PurchaseOrderDetailByPOIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrderDetail>(
                    "PurchaseOrderDetailByPOId",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetailByPOId_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetailByPOId_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetailByPOId_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetailByPOId_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderDetailByPOId_PreprocessQuery);
            private static bool __PurchaseOrderDetailByPOId_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.PurchaseOrderDetailByPOId_CanExecute(ref r);
                return r;
            }
            private static void __PurchaseOrderDetailByPOId_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PurchaseOrderDetailByPOId_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __PurchaseOrderDetailByPOId_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PurchaseOrderDetailByPOId_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrderDetail>)args[1]);
            }
            private static void __PurchaseOrderDetailByPOId_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.PurchaseOrderDetailByPOId_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __PurchaseOrderDetailByPOId_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrderDetail> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrderDetail>)args[1];
                d.PurchaseOrderDetailByPOId_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrder>
                __PurchaseOrderNotCloseEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrder>(
                    "PurchaseOrderNotClose",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderNotClose_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderNotClose_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderNotClose_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderNotClose_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__PurchaseOrderNotClose_PreprocessQuery);
            private static bool __PurchaseOrderNotClose_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.PurchaseOrderNotClose_CanExecute(ref r);
                return r;
            }
            private static void __PurchaseOrderNotClose_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PurchaseOrderNotClose_Executing();
            }
            private static void __PurchaseOrderNotClose_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.PurchaseOrderNotClose_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrder>)args[0]);
            }
            private static void __PurchaseOrderNotClose_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.PurchaseOrderNotClose_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __PurchaseOrderNotClose_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrder> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrder>)args[0];
                d.PurchaseOrderNotClose_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrder>
                __QueryMaxPONumberEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.PurchaseOrder>(
                    "QueryMaxPONumber",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__QueryMaxPONumber_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__QueryMaxPONumber_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__QueryMaxPONumber_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__QueryMaxPONumber_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__QueryMaxPONumber_PreprocessQuery);
            private static bool __QueryMaxPONumber_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.QueryMaxPONumber_CanExecute(ref r);
                return r;
            }
            private static void __QueryMaxPONumber_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.QueryMaxPONumber_Executing();
            }
            private static void __QueryMaxPONumber_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.QueryMaxPONumber_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.PurchaseOrder>)args[0]);
            }
            private static void __QueryMaxPONumber_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.QueryMaxPONumber_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __QueryMaxPONumber_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrder> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.PurchaseOrder>)args[0];
                d.QueryMaxPONumber_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockOnHand>
                __StockOnHandForSaleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.StockOnHand>(
                    "StockOnHandForSale",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHandForSale_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHandForSale_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHandForSale_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHandForSale_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__StockOnHandForSale_PreprocessQuery);
            private static bool __StockOnHandForSale_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.StockOnHandForSale_CanExecute(ref r);
                return r;
            }
            private static void __StockOnHandForSale_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.StockOnHandForSale_Executing();
            }
            private static void __StockOnHandForSale_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.StockOnHandForSale_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.StockOnHand>)args[0]);
            }
            private static void __StockOnHandForSale_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.StockOnHandForSale_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __StockOnHandForSale_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.StockOnHand> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.StockOnHand>)args[0];
                d.StockOnHandForSale_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SupplierGroup>
                __SupplierGroupsActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.SupplierGroup>(
                    "SupplierGroupsActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroupsActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroupsActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroupsActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroupsActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierGroupsActiveQuery_PreprocessQuery);
            private static bool __SupplierGroupsActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SupplierGroupsActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __SupplierGroupsActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SupplierGroupsActiveQuery_Executing();
            }
            private static void __SupplierGroupsActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SupplierGroupsActiveQuery_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SupplierGroup>)args[0]);
            }
            private static void __SupplierGroupsActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SupplierGroupsActiveQuery_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __SupplierGroupsActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.SupplierGroup> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.SupplierGroup>)args[0];
                d.SupplierGroupsActiveQuery_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Supplier>
                __SupplierActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Supplier>(
                    "SupplierActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SupplierActiveQuery_PreprocessQuery);
            private static bool __SupplierActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SupplierActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __SupplierActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SupplierActiveQuery_Executing((string)args[0]);
            }
            private static void __SupplierActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SupplierActiveQuery_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Supplier>)args[1]);
            }
            private static void __SupplierActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SupplierActiveQuery_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __SupplierActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Supplier> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Supplier>)args[1];
                d.SupplierActiveQuery_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TransportRoute>
                __TransportRoutesActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.TransportRoute>(
                    "TransportRoutesActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutesActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutesActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutesActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutesActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__TransportRoutesActiveQuery_PreprocessQuery);
            private static bool __TransportRoutesActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.TransportRoutesActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __TransportRoutesActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.TransportRoutesActiveQuery_Executing();
            }
            private static void __TransportRoutesActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.TransportRoutesActiveQuery_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.TransportRoute>)args[0]);
            }
            private static void __TransportRoutesActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.TransportRoutesActiveQuery_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __TransportRoutesActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.TransportRoute> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.TransportRoute>)args[0];
                d.TransportRoutesActiveQuery_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.UnitOfMeasure>
                __UnitOfMeasuresActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.UnitOfMeasure>(
                    "UnitOfMeasuresActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasuresActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasuresActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasuresActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasuresActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UnitOfMeasuresActiveQuery_PreprocessQuery);
            private static bool __UnitOfMeasuresActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.UnitOfMeasuresActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __UnitOfMeasuresActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.UnitOfMeasuresActiveQuery_Executing();
            }
            private static void __UnitOfMeasuresActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.UnitOfMeasuresActiveQuery_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UnitOfMeasure>)args[0]);
            }
            private static void __UnitOfMeasuresActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.UnitOfMeasuresActiveQuery_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UnitOfMeasuresActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UnitOfMeasure> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UnitOfMeasure>)args[0];
                d.UnitOfMeasuresActiveQuery_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Worker>
                __WorkersActiveQueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Worker>(
                    "WorkersActiveQuery",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkersActiveQuery_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkersActiveQuery_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkersActiveQuery_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkersActiveQuery_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__WorkersActiveQuery_PreprocessQuery);
            private static bool __WorkersActiveQuery_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.WorkersActiveQuery_CanExecute(ref r);
                return r;
            }
            private static void __WorkersActiveQuery_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.WorkersActiveQuery_Executing();
            }
            private static void __WorkersActiveQuery_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.WorkersActiveQuery_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Worker>)args[0]);
            }
            private static void __WorkersActiveQuery_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.WorkersActiveQuery_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __WorkersActiveQuery_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Worker> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Worker>)args[0];
                d.WorkersActiveQuery_PreprocessQuery(ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
